[
  {
    "Question ID": "Q1",
    "Question": "What is the purpose of the super() function in Python?",
    "A": "It is used to call a method from the superclass.",
    "B": "It is used to create an instance of a class.",
    "C": "It is used to access class attributes directly.",
    "D": "It is used to override a method in the superclass.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12"
  },
  {
    "Question ID": "Q2",
    "Question": "What is the difference between composition and inheritance in Python?",
    "A": "Composition allows for multiple inheritance, while inheritance does not.",
    "B": "Composition involves creating objects of other classes within a class, while inheritance involves inheriting attributes and methods from a superclass.",
    "C": "Composition provides encapsulation of data, while inheritance provides code reusability.",
    "D": "Composition is a fundamental concept of OOP, while inheritance is an advanced concept.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12"
  },
  {
    "Question ID": "Q3",
    "Question": "In Python, how can you create an abstract class or interface?",
    "A": "By using the keyword \"abstract\" before the class definition.",
    "B": "By importing a specific module for abstract classes and interfaces.",
    "C": "By defining methods without any implementation in the class",
    "D": "By inheriting from the built-in \"Abstract\" class or interface.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_1"
  },
  {
    "Question ID": "Q4",
    "Question": "Which of the following statements about abstract classes in Python is true?",
    "A": "An abstract class can be instantiated and used directly.",
    "B": "An abstract class cannot have any concrete methods.",
    "C": "An abstract class can have both abstract methods and concrete methods.",
    "D": "An abstract class is defined using the keyword \"abstract\" in Python.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_1"
  },
  {
    "Question ID": "Q5",
    "Question": "What is the purpose of an interface in Python?",
    "A": "An interface defines a blueprint for a class and can have both method implementations and instance variables.",
    "B": "An interface provides a way to achieve multiple inheritance in Python.",
    "C": " An interface is a built-in class in Python that provides utility methods and functionality.",
    "D": "An interface specifies a set of methods that a class must implement, without providing any method implementations.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_1"
  },
  {
    "Question ID": "Q6",
    "Question": "Which module in Python provides the tools for defining abstract base classes (ABCs) and interfaces?",
    "A": "abc",
    "B": "interface",
    "C": "abstract",
    "D": "base",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_1"
  },
  {
    "Question ID": "Q7",
    "Question": "What is the key difference between an abstract class and an interface in Python?",
    "A": "An abstract class can have both concrete and abstract methods, while an interface can only have abstract methods.",
    "B": "An abstract class can be instantiated, while an interface cannot be instantiated.",
    "C": "An abstract class can be inherited from multiple times, while an interface can only be implemented once in a class.",
    "D": "There is no difference; the terms \"abstract class\" and \"interface\" are used interchangeably in Python.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_1"
  },
  {
    "Question ID": "Q8",
    "Question": "What is a mixin in Python?",
    "A": "A mixin is a class that provides additional functionality to other classes through inheritance.",
    "B": "A mixin is a class that cannot be instantiated and serves as a blueprint for other classes.",
    "C": "A mixin is a class that can only be accessed through static methods.",
    "D": "A mixin is a class that can be instantiated but cannot be inherited from.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q9",
    "Question": "What is the main advantage of using mixins in Python?",
    "A": "Mixins allow code reuse and provide a way to extend the functionality of classes without the limitations of single inheritance.",
    "B": "Mixins simplify the process of creating new instances of a class.",
    "C": "Mixins prevent the creation of subclasses with multiple levels of inheritance.",
    "D": "Mixins improve the performance of Python code.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q10",
    "Question": "What is multiple inheritance in Python?",
    "A": "The ability to inherit from multiple classes and combine their attributes and methods",
    "B": "The ability to create multiple instances of a class.",
    "C": "The ability to define multiple constructors in a class.",
    "D": "The ability to inherit from multiple classes to create a new class.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q11",
    "Question": "Which statement is true regarding the method resolution order (MRO) in Python multiple inheritance?",
    "A": "The MRO is determined by the order of class inheritance in the class definition.",
    "B": "The MRO determines the order in which methods are executed when called from an instance of a class.",
    "C": "The MRO cannot be customized or changed.",
    "D": "The MRO affects only the order in which attributes are resolved, not methods.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q12",
    "Question": "Which of the following statements about mixins in Python is true?",
    "A": "Mixins should always be the first parent class in the inheritance hierarchy.",
    "B": "Mixins can only contain abstract methods and cannot have concrete implementations.",
    "C": "Mixins are primarily used for code reuse and to provide a specific behavior to multiple classes.",
    "D": "Mixins cannot be used in conjunction with multiple inheritance.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q13",
    "Question": "What is the order of method resolution in Python for classes with multiple inheritance?",
    "A": "Depth-first search (DFS) order",
    "B": "Breadth-first search (BFS) order",
    "C": "Random order",
    "D": "Alphabetical order",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q14",
    "Question": "Which keyword is used in Python to call a method from a specific parent class in multiple inheritance?",
    "A": "super()",
    "B": "parent()",
    "C": "base()",
    "D": "mixin()",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q15",
    "Question": "How does Python handle conflicts when two or more parent classes have methods with the same name in multiple inheritance?",
    "A": "Python raises an error and forces the programmer to resolve the conflict explicitly.",
    "B": "The method from the first parent class listed is used, and the others are ignored.",
    "C": "The method from the last parent class listed is used, and the others are ignored.",
    "D": "Python automatically resolves the conflict based on the method resolution order (MRO).",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_2"
  },
  {
    "Question ID": "Q16",
    "Question": "What are decorators in Python?",
    "A": "Functions that modify the behavior of other functions without changing their source code.",
    "B": "Functions that are used to create new instances of classes.",
    "C": "Special classes that allow the creation of custom descriptors.",
    "D": "Functions that enable the creation of abstract base classes.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q17",
    "Question": "What is the purpose of using metaclasses in Python?",
    "A": "Metaclasses are used to define abstract base classes.",
    "B": "Metaclasses are used to modify the behavior of classes and their instances.",
    "C": "Metaclasses are used to define functions that can be decorated.",
    "D": "Metaclasses are used to dynamically create new classes.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q18",
    "Question": "Which of the following is an example of a built-in decorator in Python?",
    "A": "@staticmethod",
    "B": "@classmethod",
    "C": "@property",
    "D": "All of the above",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q19",
    "Question": "Which of the following is an advantage of using metaclasses in Python?",
    "A": "Metaclasses allow for dynamic modification of existing classes at runtime.",
    "B": "Metaclasses provide a way to define class-level attributes and methods.",
    "C": "Metaclasses facilitate advanced inheritance patterns, such as multiple inheritance.",
    "D": "Metaclasses simplify the process of method overriding in Python.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q20",
    "Question": "What is the purpose of the @staticmethod decorator in Python?",
    "A": "It indicates that a method is a class method.",
    "B": "It indicates that a method is an instance method",
    "C": "It indicates that a method is a static method.",
    "D": "It indicates that a method is a decorator.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q21",
    "Question": "Which of the following statements about decorators in Python is true?",
    "A": "Decorators can only be applied to class methods, not instance methods.",
    "B": "Decorators can modify the behavior of functions but not classes.",
    "C": "Multiple decorators can be applied to a single function in a specific order.",
    "D": "Decorators can only be defined using class syntax, not function syntax.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q22",
    "Question": "What is the purpose of using the @property decorator in Python?",
    "A": " It is used to define a private variable in a class.",
    "B": "It is used to provide read-only access to a class attribute.",
    "C": "It is used to create a static method in a class.",
    "D": "It is used to override the default string representation of a class.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q23",
    "Question": "Which built-in function in Python is commonly used for creating decorators?",
    "A": "functools.partial",
    "B": "functools.lru_cache",
    "C": "functools.wraps",
    "D": "functools.update_wrapper",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q24",
    "Question": "What is the primary purpose of using decorators in Python?",
    "A": "To add functionality to a function or class without modifying its source code",
    "B": "To enforce access control and encapsulation rules",
    "C": "To define and manage class inheritance hierarchies.",
    "D": "To provide a way to create instances of a class dynamically.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q25",
    "Question": "What are metaclasses in Python?",
    "A": "Special classes used to define and manage class inheritance hierarchies.",
    "B": "Functions that modify the behavior of other functions or classes.",
    "C": "Objects used to store and manipulate metadata in Python.",
    "D": "Built-in classes used for type conversion.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q26",
    "Question": "The ______ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function.",
    "A": "#",
    "B": "$",
    "C": "@",
    "D": "&",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q27",
    "Question": "Identify the decorator in the snippet of code shown below.\n\ndef sf():\n     pass\nsf = mk(sf)\n@f\ndef sf():\n     return",
    "A": "@f",
    "B": "f\n",
    "C": "sf()",
    "D": "mk",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "advoop_12_3"
  },
  {
    "Question ID": "Q28",
    "Question": "Which module in Python provides high-level support for concurrent execution?",
    "A": "threading",
    "B": "multiprocessing",
    "C": "concurrent.futures",
    "D": "asyncio",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13"
  },
  {
    "Question ID": "Q29",
    "Question": "What is the difference between concurrency and parallelism in Python?",
    "A": "Concurrency is achieved through multithreading, while parallelism is achieved through multiprocessing.",
    "B": "Concurrency is the ability to run multiple tasks concurrently, while parallelism is the actual simultaneous execution of multiple tasks.",
    "C": "Concurrency is limited to a single CPU core, while parallelism can utilize multiple CPU cores.",
    "D": "Concurrency is a concept specific to Python, while parallelism is a general ",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13"
  },
  {
    "Question ID": "Q30",
    "Question": "What is concurrency in Python?",
    "A": "It is the ability of a program to execute multiple tasks simultaneously.",
    "B": "It is the process of running multiple instances of a program in parallel.",
    "C": "It is a technique to handle and prevent race conditions in multithreaded programs.",
    "D": "It is the practice of using multiple cores or processors to execute tasks.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13"
  },
  {
    "Question ID": "Q31",
    "Question": "What is the main difference between multithreading and multiprocessing in Python?",
    "A": "Multithreading allows multiple threads to run in the same process, while multiprocessing allows multiple processes to run in parallel.",
    "B": "Multithreading allows multiple processes to run in parallel, while multiprocessing allows multiple threads to run in the same process.",
    "C": "Multithreading and multiprocessing are essentially the same thing.",
    "D": "Multithreading and multiprocessing are both ways to run Python code on multiple CPUs.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q32",
    "Question": "What is the Global Interpreter Lock (GIL) in Python?",
    "A": "A mechanism used in multiprocessing to synchronize access to shared resources.",
    "B": "A mechanism used in multithreading to prevent multiple threads from accessing the same memory at the same time.",
    "C": "A mechanism used in Python to ensure that only one thread executes Python bytecode at a time.\n\n\n\n",
    "D": "A mechanism used in Python to optimize the execution of bytecode by pre-compiling it.\n",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q33",
    "Question": "Which of the following is true about multithreading in Python?",
    "A": "Python threads can run in parallel on multiple CPUs regardless of whether they are using the same memory.",
    "B": "Python threads cannot run in parallel on multiple CPUs.",
    "C": "Python threads can run in parallel on multiple CPUs as long as they are not using the same memory.",
    "D": "Python threads can only run on a single CPU.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q34",
    "Question": "Which of the following best defines a thread?",
    "A": " A thread is a memory location that holds the instruction",
    "B": "A thread is a set of instructions that execute at a time",
    "C": "A thread is a set of instructions that can execute independently",
    "D": "All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q35",
    "Question": "Which of the following is true about the thread of a program?\n ",
    "A": " Every program has a main thread",
    "B": "All the threads have the same id",
    "C": "There can be more than one thread set to a program",
    "D": "All the above",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q36",
    "Question": "Which of the following is not an advantage of multithreading?",
    "A": "Parallel execution",
    "B": "Decrease in time of execution",
    "C": " Decrease in complexity",
    "D": "Increase in the efficiency",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q37",
    "Question": "Which of the following codes is the correct way to create a thread for the function named func?",
    "A": "threading.Thread(target=func)",
    "B": " threading.Thread(target=’func’)",
    "C": " threading.Thread(func)",
    "D": " threading.Thread(‘func’)",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q38",
    "Question": "What does the following code return?\nthreading.active_count()",
    "A": "Number of times the thread is called",
    "B": "Number of currently active threads",
    "C": " Number of programs use the current thread",
    "D": "Number of threads in the current program",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q39",
    "Question": "Which of the following codes return the main thread?",
    "A": "threading.main_thread()",
    "B": " threading.MainThread()",
    "C": "threading.Main_thread()",
    "D": " None of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q40",
    "Question": "Which of the following is the difference between start() and run()?",
    "A": "run() is used to call the target and start() is used to initiate the target",
    "B": "run() is used to call the target and start() is used to start the thread",
    "C": "run() is used to execute the thread and start() is used to start the program",
    "D": "They are the same",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q41",
    "Question": "Which of the following is not a class that can be used for synchronization?",
    "A": "Lock",
    "B": "RLock",
    "C": "LLock",
    "D": "Semaphore",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q42",
    "Question": "Which of the function is used to wait till the previous thread is completed?",
    "A": "thread.join()",
    "B": "thread.wait()",
    "C": "thread.stop()",
    "D": "thread.run()",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q43",
    "Question": "What does the below code output?\nthreading.enumerate()",
    "A": "List of all instructions in the thread",
    "B": "List of all threads in the current program",
    "C": "List of all currently active threads",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q44",
    "Question": "Which of the following is not a method in the Thread class?",
    "A": " ident",
    "B": "daemon",
    "C": "setName",
    "D": "alive",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q45",
    "Question": "What is the correct code to get the local data specific to the thread?",
    "A": "threading.local()",
    "B": "threading.local_data()",
    "C": "threading.data()",
    "D": "None of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q46",
    "Question": "Which of the following is used to get the identifier of the current thread?",
    "A": "threading.current_thread.get_ident()",
    "B": "threading.get_ident()",
    "C": "threading.ident()",
    "D": " threading.current_thread.ident()",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q47",
    "Question": "What is the command used to remove the lock constraint?",
    "A": " lock.remove()",
    "B": "lock.release()",
    "C": "lock.exit()",
    "D": "lock.stop()",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q48",
    "Question": "Which of the following is the syntax to check if the thread is alive or not?",
    "A": "threading.Thread.is_alive(thread_name)",
    "B": "threading.is_alive(thread_name)",
    "C": "threading.thread_name.is_alive()",
    "D": "None of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_1"
  },
  {
    "Question ID": "Q49",
    "Question": "What is asynchronous programming in Python?",
    "A": "A programming model that allows a program to execute multiple tasks simultaneously.",
    "B": "A programming model that allows a program to execute tasks sequentially, one after the other.",
    "C": "A programming model that allows a program to execute tasks in random order.",
    "D": "A programming model that allows a program to execute tasks using a shared memory model.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_2"
  },
  {
    "Question ID": "Q50",
    "Question": "What is the purpose of the \"await\" keyword in Python's async/await syntax?",
    "A": "It tells the program to wait for a specified amount of time before executing the next task.",
    "B": "It tells the program to pause the execution of the current task and switch to another task until the awaited task is complete.",
    "C": "It tells the program to cancel the current task and move on to the next task.",
    "D": "It tells the program to repeat the current task until a certain condition is met.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_2"
  },
  {
    "Question ID": "Q51",
    "Question": "What is distributed computing in Python?",
    "A": "A programming model that allows a program to execute multiple tasks simultaneously on a single computer",
    "B": "A programming model that allows a program to execute tasks on multiple computers connected over a network.",
    "C": "A programming model that allows a program to execute tasks on multiple cores of a single computer.",
    "D": "A programming model that allows a program to execute tasks in parallel using a shared memory model.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "conpar_13_3"
  },
  {
    "Question ID": "Q52",
    "Question": "Which library in Python is commonly used for machine learning tasks?",
    "A": "NumPy",
    "B": "Matplotlib",
    "C": "SciPy",
    "D": "Scikit-learn",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15"
  },
  {
    "Question ID": "Q53",
    "Question": "What is the purpose of the train-test split in machine learning?",
    "A": "It splits the dataset into training and testing sets for model evaluation.",
    "B": "It transforms the data to a format suitable for machine learning algorithms.",
    "C": "It scales and normalizes the data to improve model performance.",
    "D": "It selects the best features for training a machine learning model.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15"
  },
  {
    "Question ID": "Q54",
    "Question": "Which of the following NumPy functions can be used to compute the dot product of two arrays?",
    "A": "np.add()",
    "B": "np.dot()",
    "C": "np.multiply()",
    "D": "np.concatenate()",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q55",
    "Question": "Which of the following functions in NumPy is used to generate an array of evenly spaced values within a specified range?",
    "A": "np.linspace()",
    "B": "np.arange()",
    "C": "np.random.randint()",
    "D": "np.zeros()",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q56",
    "Question": "What is the primary benefit of using NumPy arrays over Python lists?",
    "A": "NumPy arrays can hold data of different data types.",
    "B": "NumPy arrays have a fixed size and cannot be resized.",
    "C": "NumPy arrays provide faster and more efficient operations on large datasets.",
    "D": "NumPy arrays support advanced data manipulation functions, such as filtering and sorting.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q57",
    "Question": "What is NumPy in Python?",
    "A": "A package for numerical computing in Python.",
    "B": "A library for creating graphical user interfaces (GUIs) in Python.",
    "C": "A module for executing multithreaded and multiprocessing tasks in Python.",
    "D": "A framework for web development in Python.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q58",
    "Question": "PANDAS stands for _______\n",
    "A": "Panel Data",
    "B": "Panel Dashboard",
    "C": "Panel Data analyst",
    "D": "Panel Data Analysis",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q59",
    "Question": "Quandl API for Python wraps the ________ REST API to return Pandas DataFrames with time series indexes.",
    "A": "PyData",
    "B": "PyDatastream",
    "C": "Quandl",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q60",
    "Question": "Find the output of the below code.\na = np.array([[1,2,3],[4,5,6]])\n\na[1,2]",
    "A": "6",
    "B": "5",
    "C": "2",
    "D": "TypeError",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q61",
    "Question": "What is the output of the below code?\nnp.linspace(1,5,5)",
    "A": " array([1. , 2.33333333, 3.66666667, 5. ])",
    "B": " array([1., 2., 3., 4., 5.])",
    "C": "array([1. , 1.8, 2.6, 3.4, 4.2, 5. ])",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q62",
    "Question": "What is the output of the below code?\nprint(np.zeros(5).dtype)",
    "A": "int8",
    "B": "int16",
    "C": "uint8",
    "D": "float64",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q63",
    "Question": "Which of the following is not true about the identity matrix?",
    "A": "It is a square matrix",
    "B": "It contains 1s in all the diagonals",
    "C": "We can create an identity matrix using the identity() function",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q64",
    "Question": "What is the output of the below code?\nnp.array([[1,2,3],[4,5,6]]).ravel()",
    "A": "array([1, 2, 3, 4, 5, 6])",
    "B": " array([4, 5, 6, 1, 2, 3])",
    "C": "array((1, 2, 3, 4, 5, 6))",
    "D": "SytaxError",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q65",
    "Question": "Which of the following will give the output as \narray([[1, 2, 3, 1, 2, 3],\n\n       [4, 5, 6, 4, 5, 6]]) ",
    "A": "arr = np.array([[1,2,3],[4,5,6]]) np.vstack((arr,arr))",
    "B": "arr = np.array([[1,2,3],[4,5,6]]) np.hstack((arr,arr))",
    "C": " arr = np.array([[1,2,3],[4,5,6]]) arr.hstack(arr)",
    "D": "arr = np.array([[1,2,3],[4,5,6]]) arr.vstack(arr)",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q66",
    "Question": "Which of the following functions is used to create an array containing constant value?",
    "A": "constant()",
    "B": "same()",
    "C": " full()",
    "D": "All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q67",
    "Question": "Which of the following codes give an error?",
    "A": "a1 = np.array([1,2,3]) a2=np.array([0,4,9]) a1.dot(a2)",
    "B": " a1 = np.array([1,2,3,3]) a2=np.array([0,4,9]) np.add(a1,a2)",
    "C": "a = np.array([[1,3,5],[4,6,8]]) np.sum (a)",
    "D": "All the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q68",
    "Question": "Which of the following is the correct way to transpose of matrix A?",
    "A": "Trans(A)",
    "B": "Transpose(A)",
    "C": "A.T",
    "D": "A.Transpose",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q69",
    "Question": "What will be correct syntax for pandas series?",
    "A": "pandas.Series( data, index, dtype)",
    "B": "pandas_Series( data, index, dtype)",
    "C": "pandas_Series( data, index, dtype, copy)",
    "D": "pandas.Series( data, index, dtype, copy)",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q70",
    "Question": "This function in the library of Pandas allows you to manipulate data and create new variables:",
    "A": "merge function",
    "B": "read_csv function",
    "C": "apply function",
    "D": "pivot_table function",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q71",
    "Question": "What will be syntax for pandas dataframe?",
    "A": "pandas.DataFrame( data, index, dtype, copy)",
    "B": "pandas.DataFrame( data, index, rows, dtype, copy)",
    "C": "pandas.DataFrame( data, index, rows, dtype, copy)",
    "D": "pandas.DataFrame( data, index, columns, dtype, copy)",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q72",
    "Question": "We write ______ in front of mean to let Python know that we want to activate the mean function from the Numpy library.",
    "A": "ng.",
    "B": "np.",
    "C": "ngm.",
    "D": "npm.\n",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q73",
    "Question": "In pandas, Index values must be?",
    "A": "unique",
    "B": "hashable",
    "C": "Both (a) and (b)",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q74",
    "Question": "Which function from the options given below can read the dataset from a large text file?",
    "A": "read_json",
    "B": "read_pickle",
    "C": "read_hdf",
    "D": " read_csv\n",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q75",
    "Question": "Which of the following takes a dict of dicts or a dict of array-like sequences and returns a DataFrame?",
    "A": "DataFrame.from_dict",
    "B": "DataFrame.from_items",
    "C": "DataFrame.from_records",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q76",
    "Question": "Which of the following is not true about  NumPy?",
    "A": " It is a cross-platform module",
    "B": " It stands for Number Python",
    "C": "We need to install this module before using it",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q77",
    "Question": "Which of the following statement will create an empty series named \"S1\"?",
    "A": "S1 = pd.Series( )",
    "B": "S1 = pd.Series(None)",
    "C": "Both of the above",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q78",
    "Question": "Which of the function is a function to create a numpy array?\n ",
    "A": "empty()",
    "B": "array()",
    "C": "ones()",
    "D": "All the above",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q79",
    "Question": "What will be output for the following code?\n\nimport pandas as pd\ns = pd.Series([1,2,3,4,5],index = [‘a’,’b’,’c’,’d’,’e’])\nprint(s[‘a’])",
    "A": "1",
    "B": "2",
    "C": "3",
    "D": "4",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q80",
    "Question": "What is the output of the below code?\nnp.arange(2,8)",
    "A": "array([2, 3, 4, 5, 6, 7])",
    "B": "array([3, 4, 5, 6, 7])",
    "C": "array([2, 3, 4, 5, 6, 7, 8])",
    "D": "array([3, 4, 5, 6, 7, 8])",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q81",
    "Question": "Why ndim is used?",
    "A": "Returns the Series as ndarray.",
    "B": "Returns a list of the axis labels",
    "C": "Returns the number of elements in the underlying data.",
    "D": "Returns the number of dimensions of the underlying data, by definition 1.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q82",
    "Question": "Find the output of the below code.\na = np.array([[[1,2,3],[4,5,6]]])\n\nprint(a.ndim)",
    "A": "1",
    "B": "(1,3)",
    "C": "3",
    "D": " (3,1)",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q83",
    "Question": "What does the function itemsize() return?",
    "A": " It returns the size of the array",
    "B": "It returns the number of elements in the array",
    "C": "It returns the byte size of each element of the array",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_1"
  },
  {
    "Question ID": "Q84",
    "Question": "Which of the following is true about Matplotlib's pyplot module?",
    "A": "It is the module used for mathematical operations and array manipulation.",
    "B": "It is the module used for creating and customizing visualizations.",
    "C": "It is the module used for interacting with databases and executing SQL queries.",
    "D": "It is the module used for working with text and string manipulation.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_2"
  },
  {
    "Question ID": "Q85",
    "Question": "What is the purpose of the \"figure\" and \"axes\" objects in Matplotlib?",
    "A": "The \"figure\" object represents the overall window or page that the plot is drawn on, while the \"axes\" object represents the actual plot itself.",
    "B": "The \"figure\" object represents the actual plot, while the \"axes\" object represents the x and y axes.",
    "C": "The \"figure\" object represents the x and y axes, while the \"axes\" object represents the overall window or page that the plot is drawn on",
    "D": "The \"figure\" and \"axes\" objects have the same purpose and can be used interchangeably.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_2"
  },
  {
    "Question ID": "Q86",
    "Question": "What is the primary purpose of the Matplotlib function plot()?",
    "A": "It creates a scatter plot of data points.",
    "B": "It creates a line plot of data points.",
    "C": "It creates a bar plot of data points.",
    "D": "It creates a histogram of data points.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_2"
  },
  {
    "Question ID": "Q87",
    "Question": "Which of the following is a commonly used module within Matplotlib for creating 2D plots?",
    "A": "pyplot",
    "B": "numpy",
    "C": "pandas",
    "D": "sklearn",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_2"
  },
  {
    "Question ID": "Q88",
    "Question": "The ________ project builds on top of pandas and matplotlib to provide easy plotting of data.",
    "A": "Seaborn",
    "B": "yhat",
    "C": "Pychart",
    "D": "Vincent",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_2"
  },
  {
    "Question ID": "Q89",
    "Question": "Which library is not included in Scikit-learn for machine learning tasks?",
    "A": "NumPy",
    "B": "Pandas",
    "C": "Matplotlib",
    "D": "TensorFlow",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q90",
    "Question": "What algorithm is commonly used for binary classification in Scikit-learn?",
    "A": "K-means",
    "B": "Decision Tree",
    "C": "K-nearest neighbors",
    "D": "Support Vector Machines",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q91",
    "Question": "In Scikit-learn, which method is used to split the dataset into training and testing sets?",
    "A": "train_test_split()",
    "B": "split_dataset()",
    "C": "test_train_split()",
    "D": "dataset_split()",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q92",
    "Question": "Which Scikit-learn module is used for dimensionality reduction?",
    "A": "metrics",
    "B": "decomposition",
    "C": "preprocessing",
    "D": "cluster",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q93",
    "Question": "What is the purpose of the TensorFlow library?",
    "A": "To perform numerical operations efficiently",
    "B": "To build and train deep learning models",
    "C": "To visualize machine learning algorithms",
    "D": "To handle big data processing",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q94",
    "Question": "Which TensorFlow API is commonly used to build neural networks?",
    "A": "Keras",
    "B": "K-means",
    "C": "PyTorch",
    "D": "TensorFlow Lite",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q95",
    "Question": "What does SVM stand for in machine learning?",
    "A": "Support Vector Machines",
    "B": "Stochastic Variational Method",
    "C": "Sequential Vector Mapping",
    "D": "Singular Value Matrix",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q96",
    "Question": "Which Scikit-learn algorithm is used for outlier detection?",
    "A": "Linear Regression",
    "B": "K-means",
    "C": "Decision Tree",
    "D": "Isolation Forest",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q97",
    "Question": "What is the purpose of the fit() method in Scikit-learn?",
    "A": "It trains the machine learning model",
    "B": "It scales the data",
    "C": "It makes predictions on new data",
    "D": "It evaluates the performance of the model",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q98",
    "Question": "Which Scikit-learn algorithm is used for text classification?",
    "A": "K-means",
    "B": "Decision Tree",
    "C": "Naive Bayes",
    "D": "Support Vector Machines",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q99",
    "Question": "Which metric is commonly used for evaluating regression models in Scikit-learn?",
    "A": "Accuracy",
    "B": "F1 score",
    "C": "Mean Absolute Error",
    "D": "Precision",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q100",
    "Question": "Which Scikit-learn algorithm is used for clustering when the number of clusters is not known beforehand?",
    "A": "K-means",
    "B": "Hierarchical clustering",
    "C": "DBSCAN",
    "D": "Mean Shift",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q101",
    "Question": "Which TensorFlow API is used for deploying trained models to the web or cloud platforms?",
    "A": "Keras",
    "B": "Estimators",
    "C": "Tensors",
    "D": "TensorFlow Serving",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q102",
    "Question": "Which Scikit-learn algorithm is used for time series forecasting?",
    "A": "Decision Tree",
    "B": "ARIMA",
    "C": "K-means",
    "D": "Support Vector Machines",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q103",
    "Question": "The Scikit-learn algorithm used for dimensionality reduction through linear transformations is ?",
    "A": "Support Vector Machines",
    "B": "K-means",
    "C": "Principal Component Analysis (PCA)",
    "D": "Decision Tree",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q104",
    "Question": "In Scikit-learn, which algorithm is commonly used for handling imbalanced datasets?",
    "A": "Random Forest",
    "B": "Gradient Boosting",
    "C": "Naive Bayes",
    "D": "SMOTE",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q105",
    "Question": "Which Scikit-learn algorithm is used for handling missing values in datasets?",
    "A": "K-means",
    "B": "Decision Tree",
    "C": "K-nearest neighbors",
    "D": "Imputer",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "dataml_15_3"
  },
  {
    "Question ID": "Q106",
    "Question": "Which of the following GUI libraries provides a native look and feel across different operating systems?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "All of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14"
  },
  {
    "Question ID": "Q107",
    "Question": "What is the purpose of signals and slots in PyQt?",
    "A": "Signals are used to handle user interactions, while slots define the actions to be taken when a signal is emitted.",
    "B": "Signals and slots are used for creating graphical user interfaces in PyQt.",
    "C": "Signals and slots are used for connecting to databases in PyQt.",
    "D": "Signals are used for handling errors, while slots are used for displaying error messages.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14"
  },
  {
    "Question ID": "Q108",
    "Question": "Which of the following GUI libraries is based on the GTK+ toolkit?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "PyQT",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14"
  },
  {
    "Question ID": "Q109",
    "Question": "Which of the following GUI libraries in Python supports cross-platform development?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "All of the above",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "gui_14"
  },
  {
    "Question ID": "Q110",
    "Question": "What is the purpose of a signal-slot mechanism in PyQt?",
    "A": "It is used to handle user input events in a graphical user interface.",
    "B": "It is used to define and establish connections between GUI components and their associated actions or functions.",
    "C": "It is used to style and customize the appearance of GUI components.",
    "D": "It is used to define the layout and positioning of GUI components within a window.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q111",
    "Question": "What is the purpose of the event-driven programming model in GUI libraries?",
    "A": "It allows for multi-threaded execution of GUI applications.",
    "B": "It enables the creation of interactive and responsive user interfaces.",
    "C": "It simplifies the process of creating graphical elements in a GUI.",
    "D": "It handles the persistence and storage of GUI data.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q112",
    "Question": "Which of the following is a key feature of PyGTK in Python?",
    "A": "It has native support for Windows operating systems.",
    "B": "It allows the creation of mobile applications.",
    "C": "It integrates well with the GNOME desktop environment.",
    "D": "It is primarily used for data visualization.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q113",
    "Question": "Which GUI library is known for its simplicity and ease of use in Python?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "All of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q114",
    "Question": "Which of the following is a feature of Tkinter in Python?",
    "A": "It provides a wide range of pre-built GUI components.",
    "B": "It supports the creation of web-based user interfaces.",
    "C": "It is specifically designed for game development.",
    "D": "It is a low-level library with limited functionality.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q115",
    "Question": "What is the primary advantage of using PyQt over Tkinter?",
    "A": "PyQt offers better cross-platform support.",
    "B": "PyQt provides more advanced graphical capabilities.",
    "C": "PyQt has a larger community and more extensive documentation",
    "D": "Tkinter is more lightweight and faster than PyQt.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q116",
    "Question": "Which of the following GUI libraries is a built-in module in Python?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "None of the Above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q117",
    "Question": "Which of the following GUI libraries allows you to design the user interface using a visual drag-and-drop interface?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "PyGTK",
    "D": "All of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q118",
    "Question": "Which of the following is not the module provided by Python for GUI programming?",
    "A": "Tkinter",
    "B": "PyQt",
    "C": "wxPython",
    "D": "Swing GUI",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q119",
    "Question": "Which of the following is true about the GUI shown below?",
    "A": "The Menu widget is used in the GUI",
    "B": " Each of the sub labels (Hi,Hello,Welcome) are added using the function add_checkbuttons()",
    "C": "The alignment of the widget is done using the function centre()",
    "D": " All the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q120",
    "Question": "Which of the following is code to create a slider that allows you to slide any of the values from 1 to 10?",
    "A": "Slider (win, from_=0, to=10)",
    "B": " Scale(win, from_=1, to=10)",
    "C": "Scale(win, from_=0, to=11)",
    "D": "Slider (win, from_=1, to=11)",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q121",
    "Question": "Which of the following widgets can be used to take input from the user?",
    "A": " Input",
    "B": "TextField",
    "C": "Entry",
    "D": " All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q122",
    "Question": "Which of the following codes can be used to get an error message as “This is a message”?",
    "A": " messagebox.showerror(\"Message\", \"This is a message \")",
    "B": "messagebox.showwarning(\"Message\", \"This is a message \")",
    "C": "message.showerror( \"This is a message \",\"Message\")",
    "D": "message.showwarning(\"Message\", \"This is a message \")",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q123",
    "Question": "What is the use of the mainloop() function?",
    "A": "It is a function that loops through all the widgets so that they are placed on the window.",
    "B": "It continuously loops through the button to know if the button is pressed.",
    "C": "It loops infinitely till the window is closed to get triggered by an event.",
    "D": "None of these",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q124",
    "Question": "Which of the following is not the widget provided by Tkinter?",
    "A": "Label",
    "B": "Layout",
    "C": "Listbox",
    "D": " Frame",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q125",
    "Question": "Which of the following is the correct code to set the size of the window as 200 x 100?",
    "A": "window.geometry(\"200×100\")",
    "B": "window.shape(\"200×100\")",
    "C": "window.size(200×100)",
    "D": "window.shape(200,100)",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q126",
    "Question": "What is the code to draw a line in Canvas?",
    "A": "canvas.create_line(15, 25, 200, 25)",
    "B": "canvas.line(15, 25, 200, 25)",
    "C": "canvas.create_stline(15, 25, 200, 25)",
    "D": "None of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q127",
    "Question": "Which of the following is the correct way to set the name of the GUI application as ‘Gui’?",
    "A": "window.set_title('Welcome')",
    "B": "window.label('Welcome')",
    "C": "window.title('Welcome')",
    "D": "window.lable('Welcome')",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q128",
    "Question": "What does the property cursor mean in Python GUI?",
    "A": " It sets the cursor used when the GUI window is active",
    "B": "It sets the cursor used when the cursor is on the respective widget",
    "C": "It sets the cursor used when the cursor is on the space on GUI window",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q129",
    "Question": "Which of the following commands help in adding items to the list box?",
    "A": "listbox. append(item_name)",
    "B": "listbox. extend(item_name)",
    "C": " listbox. insert(item_name)",
    "D": "There is no command to do this operation",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q130",
    "Question": "Which of the following is the code to create a widget that lets the user enter an integer from 1 to 10?",
    "A": "Choice(win, from_ = 1, to = 15)",
    "B": "Spinbox(win, from_ = 1, to = 15)",
    "C": "Choice(win, from_ = 1, to = 14)",
    "D": "Spinbox(win, from_ = 1, to = 14)",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "gui_14_1"
  },
  {
    "Question ID": "Q131",
    "Question": "What is the role of a web server in the context of web development?",
    "A": "It stores and manages the website's data.",
    "B": "It processes client requests and delivers web pages to the browser.",
    "C": "It handles client-side scripting and interactivity",
    "D": "It ensures database connectivity and management.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16"
  },
  {
    "Question ID": "Q132",
    "Question": "What is the purpose of an HTTP request in web development?",
    "A": "It determines the layout and styling of a web page.",
    "B": "It defines the server-side logic and functionality.",
    "C": "It fetches resources from a server, such as HTML, CSS, and JavaScript.",
    "D": "It manages user authentication and security.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16"
  },
  {
    "Question ID": "Q133",
    "Question": "How can you handle form submissions in web development using Python?",
    "A": "Using Django's Form class",
    "B": "Using Flask's Form module",
    "C": "Using HTML's <form> tag with Python code",
    "D": "Using Python's built-in form handling libraries",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16"
  },
  {
    "Question ID": "Q134",
    "Question": "Which web framework is known for its simplicity, ease of use, and minimalistic design, making it suitable for small projects and rapid development?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "FastAPI",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q135",
    "Question": "In Django, what is the purpose of a Django model?",
    "A": "It defines the URL routing and view functions of a web application.",
    "B": "It handles database operations and ORM (Object-Relational Mapping).",
    "C": "It generates dynamic HTML content by combining data with pre-defined templates",
    "D": "It manages authentication and session handling.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q136",
    "Question": "Which web framework follows the convention-over-configuration principle?",
    "A": "Flask",
    "B": "Django",
    "C": "Falcon",
    "D": "Pyramid",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q137",
    "Question": "What is the purpose of a middleware in web frameworks?",
    "A": "To handle database operations and ORM (Object-Relational Mapping).",
    "B": "To manage user authentication and authorization.",
    "C": "To handle request and response processing in a web application.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q138",
    "Question": "Which web framework provides support for WebSockets and real-time communication?",
    "A": "Flask",
    "B": "Django",
    "C": "Falcon",
    "D": "Tornado",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q139",
    "Question": "What is the purpose of an ORM (Object-Relational Mapping) in web frameworks?",
    "A": "It handles URL routing and view functions.",
    "B": "It provides a built-in administration interface for managing database operations",
    "C": "It maps database tables and queries to objects and provides an abstraction layer.",
    "D": "It manages user authentication and authorization.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q140",
    "Question": "Which web framework is known for its flexibility and allows developers to choose their own database and other components?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "Falcon",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q141",
    "Question": "What is the purpose of a URL dispatcher in web frameworks?",
    "A": "To handle database operations and ORM (Object-Relational Mapping)",
    "B": "To manage user authentication and authorization.",
    "C": "To map URLs to appropriate views or functions in a web application.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q142",
    "Question": "In Django, what is the purpose of the manage.py file?",
    "A": "It handles URL routing and view functions.",
    "B": "It manages the database migrations and schema updates.",
    "C": "It generates HTML templates and dynamic content.",
    "D": "It provides a command-line interface for managing Django projects.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q143",
    "Question": "Which web framework is known for its performance, asynchronous capabilities, and support for high-traffic applications?",
    "A": "Flask",
    "B": "Django",
    "C": "FastAPI",
    "D": "Tornado",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q144",
    "Question": "Which of the following is true about Flask blueprints?",
    "A": "Blueprints are used for handling database operations in Flask applications.",
    "B": "Blueprints are used for defining URL routing and view functions in Flask applications.",
    "C": "Blueprints are built-in modules that provide authentication and authorization in Flask.",
    "D": "Blueprints are used for managing static files and assets in Flask applications.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q145",
    "Question": "Which of the following is an advantage of using Django over Flask?",
    "A": "Django provides more flexibility and customization options compared to Flask.",
    "B": "Django has better performance and scalability for large-scale applications.",
    "C": "Django has a simpler and easier-to-learn syntax than Flask.",
    "D": "Django has better support for microservices and RESTful APIs.",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q146",
    "Question": "Which web framework follows the model-view-controller (MVC) architectural pattern?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "Falcon",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q147",
    "Question": "In Django, what is the purpose of a Django template?",
    "A": "It defines the URL routing and view functions of a web application.",
    "B": "It handles database operations and ORM (Object-Relational Mapping).",
    "C": "It generates dynamic HTML content by combining data with pre-defined templates.",
    "D": "It manages authentication and session handling.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q148",
    "Question": "Which web framework is known for its lightweight and minimalistic design, making it suitable for small projects and APIs?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "Bottle",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q149",
    "Question": "Which of the following statements is true about Flask's request context?",
    "A": "Flask automatically handles request context, so it does not need to be explicitly managed.",
    "B": "Request context is required for handling database transactions in Flask applications.",
    "C": "Flask's request context allows access to request-related information during the processing of a request.",
    "D": "Request context is only applicable to Flask applications running in production environments.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q150",
    "Question": "Which web framework provides built-in support for WebSocket communication and real-time applications?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "FastAPI",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_1"
  },
  {
    "Question ID": "Q151",
    "Question": "What is the role of an API gateway in a microservices architecture with REST APIs?",
    "A": "To handle URL routing and view functions.",
    "B": "To manage user authentication and authorization.",
    "C": "To provide a single entry point for multiple APIs and perform tasks such as rate limiting, request transformation, and logging.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q152",
    "Question": "Which Python library is commonly used for building REST APIs?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "FastAPI",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q153",
    "Question": "What is the purpose of throttling in a REST API?",
    "A": "To handle URL routing and view functions",
    "B": "To manage user authentication and authorization.",
    "C": "To limit the number of requests a client can make within a specific time frame.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q154",
    "Question": "What are the advantages of using token-based authentication over traditional session-based authentication in a REST API?",
    "A": "Token-based authentication provides stateless authentication and enables scalability",
    "B": "Token-based authentication provides stronger security with encrypted tokens.",
    "C": "Token-based authentication allows cross-domain authentication and avoids cookie-related issues.",
    "D": "All of the above.",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q155",
    "Question": "Where is content negotiation used in a REST API?",
    "A": "To handle database operations and ORM (Object-Relational Mapping).",
    "B": "To manage user authentication and authorization.",
    "C": "To negotiate the format of the response content based on client preferences.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q156",
    "Question": "Which HTTP status code is typically returned when a resource is successfully created in a REST API?",
    "A": "200 OK",
    "B": "201 Created",
    "C": "204 No Content",
    "D": "400 Bad Request",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q157",
    "Question": "How does rate limiting work in a REST API?",
    "A": "By handling database operations and ORM (Object-Relational Mapping).",
    "B": "By managing user authentication and authorization.",
    "C": "By limiting the number of requests a client can make within a specific time frame.",
    "D": "By generating HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q158",
    "Question": "In a REST API, What is the purpose of request validation?",
    "A": "To handle database operations and ORM (Object-Relational Mapping).",
    "B": "To manage user authentication and authorization.",
    "C": "To ensure that incoming API requests meet specific criteria or constraints.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q159",
    "Question": "The HTTP method that is typically used to create a new resource in a REST API?",
    "A": "GET",
    "B": "POST",
    "C": "PUT",
    "D": "DELETE",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q160",
    "Question": "What is the purpose of an API endpoint in a REST API?",
    "A": "It represents the URL path for accessing a specific resource.",
    "B": "It defines the HTTP headers to be included in API requests.",
    "C": "It handles database operations and ORM (Object-Relational Mapping).",
    "D": "It generates dynamic HTML content by combining data with pre-defined templates.",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q161",
    "Question": "Which authentication method is commonly used for securing REST APIs?",
    "A": "Basic Authentication",
    "B": "Token-based Authentication",
    "C": "OAuth",
    "D": "JWT (JSON Web Tokens)",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q162",
    "Question": "What is the purpose of request parsing in a REST API?",
    "A": "To handle URL routing and view functions.",
    "B": "To manage user authentication and authorization.",
    "C": "To extract and validate data from incoming API requests.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q163",
    "Question": "Which HTTP status code is typically returned when a resource is successfully updated in a REST API?",
    "A": "200 OK",
    "B": "201 Created",
    "C": "204 No Content",
    "D": "400 Bad Request",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q164",
    "Question": "Why is pagination used in a REST API?",
    "A": "To define the structure and layout of a web page.",
    "B": "To handle form submissions and user input.",
    "C": "To limit the number of records returned in API responses and provide navigation for large result sets.",
    "D": "To manage authentication and session handling.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q165",
    "Question": "Which HTTP method is typically used to retrieve a specific resource in a REST API?",
    "A": "GET",
    "B": "POST",
    "C": "PUT",
    "D": "DELETE",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q166",
    "Question": "Why versioning is used in a REST API?",
    "A": "To handle URL routing and view functions.",
    "B": "To manage user authentication and authorization.",
    "C": "To maintain compatibility and allow for changes in the API over time.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q167",
    "Question": "Which HTTP status code is typically returned when a resource is successfully deleted in a REST API?",
    "A": "200 OK",
    "B": "201 Created",
    "C": "204 No Content",
    "D": "400 Bad Request",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q168",
    "Question": "What is the purpose of serialization in a REST API?",
    "A": "To handle URL routing and view functions.",
    "B": "To manage user authentication and authorization.",
    "C": "To convert complex data objects into a format suitable for storage or transmission.",
    "D": "To generate HTML templates and dynamic content.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q169",
    "Question": "Which Python library provides built-in support for request validation, serialization, and documentation in REST APIs?",
    "A": "Flask",
    "B": "Django",
    "C": "Pyramid",
    "D": "FastAPI",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q170",
    "Question": "What is the purpose of HATEOAS (Hypermedia as the Engine of Application State) in a REST API?",
    "A": "To define the structure and layout of a web page.",
    "B": "To handle form submissions and user input.",
    "C": "To enable the API to provide links and navigation options to clients for discovering available resources and actions.",
    "D": "To manage authentication and session handling.",
    "Correct Answer": "C",
    "Difficulty Level": "Advanced",
    "tag": "web_16_2"
  },
  {
    "Question ID": "Q171",
    "Question": "How can you add a CSS class to an HTML element in a Django template?",
    "A": "Using the class attribute",
    "B": "Using the style attribute",
    "C": "Using the css_class attribute",
    "D": "Using the css attribute",
    "Correct Answer": "A",
    "Difficulty Level": "Advanced",
    "tag": "web_16_3"
  },
  {
    "Question ID": "Q172",
    "Question": "In Django, where is the recommended location to store static files such as CSS and JavaScript?",
    "A": "/templates",
    "B": "/static",
    "C": "/media",
    "D": "/assets",
    "Correct Answer": "B",
    "Difficulty Level": "Advanced",
    "tag": "web_16_3"
  },
  {
    "Question ID": "Q173",
    "Question": "How can you include an external CSS file in a Django template?",
    "A": "Using the <style> tag with the \"src\" attribute",
    "B": "Using the {% css %} template tag",
    "C": "Using the {% file %} template tag",
    "D": "Using the <link> tag with the \"href\" attribute",
    "Correct Answer": "D",
    "Difficulty Level": "Advanced",
    "tag": "web_16_3"
  },
  {
    "Question ID": "Q174",
    "Question": "What is the purpose of conditional statements in Python?",
    "A": "To control the flow of execution based on specific conditions.",
    "B": "To repeat a block of code multiple times.",
    "C": "To define and manipulate data structures.",
    "D": "To import and use external libraries.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3"
  },
  {
    "Question ID": "Q175",
    "Question": "Which keyword is used to indicate the start of a conditional statement in Python?",
    "A": "if",
    "B": "else",
    "C": "while",
    "D": "for",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3"
  },
  {
    "Question ID": "Q176",
    "Question": "Which of the following is NOT a control flow statement in Python?",
    "A": "if",
    "B": "while",
    "C": "else",
    "D": "boolean",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_1"
  },
  {
    "Question ID": "Q177",
    "Question": "What will be the output of the following Python code?\n\nfor i in range(10):\n    if i == 5:\n        break\n    else:\n        print(i)\nelse:\n    print(\"Here\")",
    "A": "0 1 2 3 4 Here",
    "B": "0 1 2 3 4 5 Here",
    "C": "0 1 2 3 4",
    "D": "1 2 3 4 5",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_1"
  },
  {
    "Question ID": "Q178",
    "Question": "What is the correct syntax for a for loop that iterates over a list?",
    "A": "for i in list:",
    "B": "for i in range(len(list)):",
    "C": "for i in list[1:]:",
    "D": " for i in range(0, len(list)):",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q179",
    "Question": "What does the following code print? for i in range(5): print(i)",
    "A": "0 1 2 3 4",
    "B": "1 2 3 4 5",
    "C": "0 1 2 3 4 5",
    "D": "None of the above\n",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q180",
    "Question": "What will be the output of the following Python code?\n\nx = ['ab', 'cd']\nfor i in x:\n    i.upper()\nprint(x)",
    "A": "[‘AB’, ‘CD’]",
    "B": "[‘ab’, ‘cd’, ‘AB’, ‘CD’]",
    "C": "[‘ab’, ‘cd’]",
    "D": "none of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q181",
    "Question": "What will be the output of the following Python code?\n\ni = 1\nwhile True:\n    if i%3 == 0:\n        break\n    print(i)\n \n    i + = 1",
    "A": "1 2",
    "B": "1 2 2003",
    "C": "error",
    "D": "none of the mentioned",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q182",
    "Question": "What will be the output of the following Python code?\n\ni = 0\nwhile i < 3:\n    print(i)\n    i += 1\nelse:\n    print(0)",
    "A": "0 1 2 3 0",
    "B": "0 1 2 0",
    "C": "2000 1 2",
    "D": "error",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q183",
    "Question": "What will be the output of the following Python code?\n\nx = \"abcdef\"\nwhile i in x:\n    print(i, end=\" \")",
    "A": "a b c d e f",
    "B": "abcdef",
    "C": "i i i i i i …",
    "D": "error",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_2"
  },
  {
    "Question ID": "Q184",
    "Question": "What will be the output of the following Python code?\n\nx = (i for i in range(3))\nfor i in x:\n    print(i)",
    "A": "2000 1 2",
    "B": "error",
    "C": "0 1 2 0 1 2",
    "D": "none of the mentioned",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q185",
    "Question": "What will be the output of the following Python code?\n\nstring = \"my name is x\"\nfor i in string:\n    print (i, end=\", \")",
    "A": "m, y, , n, a, m, e, , i, s, , x,",
    "B": " m, y, , n, a, m, e, , i, s, , x",
    "C": "my, name, is, x,",
    "D": "error",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_2"
  },
  {
    "Question ID": "Q186",
    "Question": "Which loop control statement is used to exit a loop completely without executing any further statements in the loop?",
    "A": "exit",
    "B": "return",
    "C": "terminate",
    "D": "break",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_3"
  },
  {
    "Question ID": "Q187",
    "Question": "What is the purpose of the pass statement in a loop?",
    "A": "It skips the current iteration and moves to the next iteration.",
    "B": "It terminates the loop and transfers control to the next statement after the loop.",
    "C": "It indicates an empty block and does nothing.",
    "D": "It increases the value of the loop counter.",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_3"
  },
  {
    "Question ID": "Q188",
    "Question": "If a continue statement is encountered within a loop, what happens to the remaining statements within that loop iteration?",
    "A": "They are skipped, and the loop moves to the next iteration.",
    "B": "They are executed before moving to the next iteration.",
    "C": "They are executed after completing all iterations.",
    "D": "They are not affected by the continue statement.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_3"
  },
  {
    "Question ID": "Q189",
    "Question": "In a loop, if both the break and continue statements are present, which one takes precedence?",
    "A": "break",
    "B": "continue",
    "C": "both have equal precedence",
    "D": "It depends on the specific loop construct",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_3"
  },
  {
    "Question ID": "Q190",
    "Question": "What is the purpose of the break statement in a loop?",
    "A": "It skips the current iteration and moves to the next iteration.",
    "B": "It terminates the loop and transfers control to the next statement after the loop.",
    "C": "It restarts the loop from the beginning.",
    "D": "It increases the value of the loop counter.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "Ctrl_3_3"
  },
  {
    "Question ID": "Q191",
    "Question": "Can the expressions used in the ternary operator have side effects, such as modifying variables?",
    "A": "Yes, expressions can have side effects",
    "B": "No, expressions cannot modify variables",
    "C": "Only expression1 can have side effects",
    "D": "Only expression2 can have side effects",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q192",
    "Question": "What is the advantage of using the ternary operator over an if-else statement in Python?",
    "A": "It offers better performance and faster execution",
    "B": "It allows for more complex conditions and branching",
    "C": "It results in more readable and concise code",
    "D": "It provides better error handling and exception control",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q193",
    "Question": "Can the ternary operator in Python handle multiple conditions?",
    "A": "Yes, by nesting ternary operators",
    "B": "No, it only supports a single condition",
    "C": "Yes, by separating conditions with commas",
    "D": "No, it is not possible to have multiple conditions",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q194",
    "Question": "What happens if the condition in the ternary operator evaluates to False?",
    "A": "expression1 is executed",
    "B": "expression2 is executed",
    "C": "The program exits immediately",
    "D": "Both expression1 and expression2 are executed",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q195",
    "Question": "What happens if the condition in the ternary operator evaluates to True?",
    "A": "expression1 is executed",
    "B": "expression2 is executed",
    "C": "The program exits immediately",
    "D": "Both expression1 and expression2 are executed",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q196",
    "Question": "Which of the following is an example of the ternary operator usage in Python?",
    "A": "x = a if a > b else b",
    "B": "x = a > b ? a : b",
    "C": "x = a : b if a > b",
    "D": "x = a if b > a else b",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q197",
    "Question": "What is the purpose of the ternary operator's condition in Python?",
    "A": "It determines the execution of expression1",
    "B": "It determines the execution of expression2",
    "C": "It determines whether to use the ternary operator or not",
    "D": "It determines the outcome of the entire conditional statement",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q198",
    "Question": "Which of the following is the correct syntax for the ternary operator in Python?",
    "A": "condition ? expression1 : expression2",
    "B": "condition : expression1 ? expression2",
    "C": "condition : expression1 if expression2",
    "D": "expression1 if condition else expression2",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q199",
    "Question": "What is the purpose of the ternary operator in Python's control flow?",
    "A": "It allows defining multiple conditions within a single statement",
    "B": "It enables the execution of a block of code repeatedly",
    "C": "It provides a concise way to write conditional expressions",
    "D": "It performs bitwise operations on binary values",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q200",
    "Question": "Which symbol is used to represent the ternary operator in Python?",
    "A": "\"?\"",
    "B": "\"||\"",
    "C": "\":\"",
    "D": "\"-\"",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q201",
    "Question": "What is the result of the ternary operator expression x = 0 if a < b else 1 if a > b else 2 if a is less than b?",
    "A": "x is assigned the value 0",
    "B": "x is assigned the value 1",
    "C": "x is assigned the value 2",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q202",
    "Question": "Can the ternary operator be used for more than one assignment in a single line of code?",
    "A": "No, it can only assign a single value",
    "B": "Yes, by separating assignments with commas",
    "C": "Yes, by nesting ternary operators",
    "D": "No, it is not possible to have multiple assignments",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q203",
    "Question": "What is the result of the ternary operator expression x = (a if a > b else b) if b > c else c if a is greater than b and b is greater than c?",
    "A": "x is assigned the value of a",
    "B": "x is assigned the value of a",
    "C": "x is assigned the value of c",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q204",
    "Question": "Can the ternary operator be used to replace complex nested if-else statements?",
    "A": "Yes, it can simplify nested conditions and provide a more concise solution",
    "B": "No, it is only suitable for simple if-else conditions",
    "C": "It depends on the specific requirements of the problem",
    "D": "The ternary operator cannot be used to replace if-else statements",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q205",
    "Question": "What is the result of the ternary operator expression x = a if a > b else c if c > d else e if a is greater than b and c is greater than d?",
    "A": "x is assigned the value of a",
    "B": "x is assigned the value of c",
    "C": "x is assigned the value of e",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q206",
    "Question": "What happens if both expression1 and expression2 in the ternary operator have side effects?",
    "A": "Only expression1's side effects are applied",
    "B": "Only expression2's side effects are applied",
    "C": "Both expression1 and expression2's side effects are applied",
    "D": "An error occurs due to conflicting side effects",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q207",
    "Question": "Can the expressions used in the ternary operator have side effects, such as modifying variables?",
    "A": "Yes, expressions can have side effects",
    "B": "No, expressions cannot modify variables",
    "C": "Only expression1 can have side effects",
    "D": "Only expression2 can have side effects",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q208",
    "Question": "What is the advantage of using the ternary operator over an if-else statement in Python?",
    "A": "It provides better error handling and exception control",
    "B": "It allows for more complex conditions and branching",
    "C": "It results in more readable and concise code",
    "D": "It offers better performance and faster execution",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q209",
    "Question": "Which of the following is an example of the ternary operator usage in Python?",
    "A": "result = num if num % 2 == 0 else 'Odd'",
    "B": "result = num % 2 == 0 ? num : 'Odd'",
    "C": "result = 'Even' : num if num % 2 == 0",
    "D": "result = 'Even' if num % 2 == 0 else num",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q210",
    "Question": "In the ternary operator expression result = 'Pass' if score >= 60 else 'Fail', what value will result have if score is 75?",
    "A": "75",
    "B": "Fail'",
    "C": "Pass'",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q211",
    "Question": "What is the result of the ternary operator expression x = 10 if a > b else 20 if a is greater than b?",
    "A": "x is assigned the value 10",
    "B": "x is assigned the value 20",
    "C": "An error occurs because of the missing condition",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q212",
    "Question": "What is the result of the following ternary operator expression? result = x if x is not None else y",
    "A": "result is assigned the value of x if x is not None; otherwise, it is assigned the value of y",
    "B": "result is assigned the value of x if x is None; otherwise, it is assigned the value of y",
    "C": "result is assigned the value of y if x is not None; otherwise, it is assigned the value of x",
    "D": "result is always assigned the value of y",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q213",
    "Question": "Which of the following is the correct syntax for using the ternary operator to assign a default value if a variable is None?",
    "A": "x = None if x is None else default_value",
    "B": "x = None if x else default_value",
    "C": "x = default_value if x is None else x",
    "D": "x = default_value if x else None",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q214",
    "Question": "What is the result of the ternary operator expression result = 10 if True else 20 if False else 30?",
    "A": "result is assigned the value 10",
    "B": "result is assigned the value 10",
    "C": "result is assigned the value 30",
    "D": "An error occurs because of the incorrect syntax",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q215",
    "Question": "Which of the following is an example of the ternary operator usage in Python?",
    "A": "x = a if a > b else a = b",
    "B": "x = a > b ? a : b",
    "C": "x = a = b if a > b",
    "D": "x = a if a > b else b",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ctrl_3_4"
  },
  {
    "Question ID": "Q216",
    "Question": "Suppose list1 is [2445,133,12454,123], what is max(list1)?",
    "A": "2445",
    "B": "133",
    "C": "12454",
    "D": "123",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q217",
    "Question": "What is the output of the following code? a = [1, 2, 3]\nb = a\nb.append(4)\nprint(a)",
    "A": "[1,2,3]",
    "B": "[1,2,3,4]",
    "C": "[1,2,4]",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q218",
    "Question": "Which of the following is a correct way to check if a value exists in a list in Python?",
    "A": "if value in list:",
    "B": "if value == list:",
    "C": "if value not in list:",
    "D": "if value != list:",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q219",
    "Question": " What will be the output of the following Python code?\n\ndef f(i, values = []):\n    values.append(i)\n    return values\n \nf(1)\nf(2)\nv = f(3)\nprint(v)",
    "A": "[1] [2] [3]\n",
    "B": "[1] [1, 2] [1, 2, 3]",
    "C": "[1, 2, 3]",
    "D": "1 2 2003",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q220",
    "Question": " What will be the output of the following Python code?\n\nnames1 = ['Amir', 'Bala', 'Chales']\n \nif 'amir' in names1:\n    print(1)\nelse:\n    print(2)",
    "A": "None",
    "B": "1",
    "C": "2",
    "D": "Error",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q221",
    "Question": "What will be the output of the following Python code?\n\nnames1 = ['Amir', 'Bala', 'Charlie']\nnames2 = [name.lower() for name in names1]\n \nprint(names2[2][0])",
    "A": "None",
    "B": "a",
    "C": "b",
    "D": "c",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q222",
    "Question": "What will be the output of the following Python code?\n\nnumbers = [1, 2, 3, 4]\n \nnumbers.append([5,6,7,8])\n \nprint(len(numbers))",
    "A": "4",
    "B": "5",
    "C": "8",
    "D": "12",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q223",
    "Question": "To which of the following the “in” operator can be used to check if an item is in it?",
    "A": "Lists",
    "B": "Dictionary",
    "C": "Set",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q224",
    "Question": "What will be the output of the following Python code?\n\ndef addItem(listParam):\n    listParam += [1]\n \nmylist = [1, 2, 3, 4]\naddItem(mylist)\nprint(len(mylist))",
    "A": "1",
    "B": "4",
    "C": "5",
    "D": "8",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q225",
    "Question": "What will be the output of the following Python code?\n\ndef increment_items(L, increment):\n    i = 0\n    while i < len(L):\n        L[i] = L[i] + increment\n        i = i + 1\n \nvalues = [1, 2, 3]\nprint(increment_items(values, 2))\nprint(values)",
    "A": "None\n   [3, 4, 5]",
    "B": "   None\n   [1, 2, 3]",
    "C": "   [3, 4, 5]\n   [1, 2, 3]",
    "D": "   [3, 4, 5]\n   None",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q226",
    "Question": "What will be the output of the following Python code?\n\nveggies = ['carrot', 'broccoli', 'potato', 'asparagus']\nveggies.insert(veggies.index('broccoli'), 'celery')\nprint(veggies)",
    "A": "[‘carrot’, ‘celery’, ‘broccoli’, ‘potato’, ‘asparagus’] Correct 1.00",
    "B": "[‘carrot’, ‘celery’, ‘potato’, ‘asparagus’]",
    "C": "[‘carrot’, ‘broccoli’, ‘celery’, ‘potato’, ‘asparagus’]",
    "D": "[‘celery’, ‘carrot’, ‘broccoli’, ‘potato’, ‘asparagus’]",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q227",
    "Question": "What will be the output of the following Python code?\n\n>>>names = ['Amir', 'Bear', 'Charlton', 'Daman']\n>>>print(names[-1][-1])",
    "A": "n",
    "B": "A",
    "C": "Daman",
    "D": "Error",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q228",
    "Question": "Suppose list1 is [1, 3, 2], What is list1 * 2?",
    "A": "[2, 6, 4]",
    "B": " [1, 3, 2, 1, 3]",
    "C": "[1, 3, 2, 1, 3, 2]",
    "D": "[1, 3, 2, 3, 2, 1]",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q229",
    "Question": "Suppose list1 = [0.5 * x for x in range(0, 4)], list1 is:",
    "A": "[0, 1, 2, 3]",
    "B": "[0, 1, 2, 3, 4]",
    "C": "[0.0, 0.5, 1.0, 1.5]",
    "D": "[0.0, 0.5, 1.0, 1.5, 2.0]",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q230",
    "Question": " What will be the output of the following Python code?\n\n>>>list1 = [11, 2, 23]\n>>>list2 = [11, 2, 2]\n>>>list1 < list2",
    "A": "TRUE",
    "B": "FALSE",
    "C": "Error",
    "D": "None",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q231",
    "Question": " To add a new element to a list we use which command?",
    "A": "list1.add(5)",
    "B": "list1.append(5)",
    "C": "list1.addLast(5)",
    "D": "list1.addEnd(5)",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q232",
    "Question": "To insert 5 to the third position in list1, we use which command?",
    "A": "list1.insert(3, 5)",
    "B": "list1.insert(2, 5)",
    "C": "list1.add(3, 5)",
    "D": "list1.append(3, 5)",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q233",
    "Question": " Suppose list1 is [3, 4, 5, 20, 5], what is list1.index(5)?",
    "A": "0",
    "B": "4",
    "C": "1",
    "D": "2",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q234",
    "Question": "Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?",
    "A": "[3, 4, 5, 20, 5, 25, 1, 3]",
    "B": "[1, 3, 3, 4, 5, 5, 20, 25]",
    "C": "[25, 20, 5, 5, 4, 3, 3, 1]",
    "D": "[3, 1, 25, 5, 20, 5, 4, 3]",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q235",
    "Question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])?",
    "A": " [3, 4, 5, 20, 5, 25, 1, 3, 34, 5]",
    "B": "[1, 3, 3, 4, 5, 5, 20, 25, 34, 5]",
    "C": "[25, 20, 5, 5, 4, 3, 3, 1, 34, 5]",
    "D": "[1, 3, 4, 5, 20, 5, 25, 3, 34, 5]",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_1"
  },
  {
    "Question ID": "Q236",
    "Question": "What is the difference between a list and a tuple?",
    "A": " A list is immutable, while a tuple is mutable",
    "B": " A tuple is indexed, while a list is not",
    "C": " A list is ordered, while a tuple is not",
    "D": " A list is mutable, while a tuple is immutable",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5"
  },
  {
    "Question ID": "Q237",
    "Question": "Which of the following is a Python tuple?",
    "A": " {1, 2, 3}",
    "B": "{}",
    "C": " [1, 2, 3]",
    "D": " (1, 2, 3)",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q238",
    "Question": "What type of data is: a=[(1,1),(2,4),(3,9)]?",
    "A": "Array of tuples",
    "B": "List of tuples",
    "C": "Tuples of lists",
    "D": "Invalid type",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q239",
    "Question": "Suppose t = (1, 2, 4, 3), which of the following is incorrect?",
    "A": "print(t[3])",
    "B": "t[3] = 45",
    "C": "print(max(t))",
    "D": "print(len(t))",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q240",
    "Question": " What will be the output of the following Python code? >>>t=(1,2,4,3)\n>>>t[1:3]",
    "A": "(1, 2)",
    "B": "(1, 2, 4)",
    "C": "(2, 4)",
    "D": "(2, 4, 3)",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q241",
    "Question": "What will be the output of the following Python code?\n\n>>>t=(1,2,4,3)\n>>>t[1:-1]",
    "A": "(1, 2)",
    "B": "(1, 2, 4)",
    "C": "(2, 4)",
    "D": "(2, 4, 3)",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q242",
    "Question": " What will be the output of the following Python code?\n\n>>>t = (1, 2, 4, 3, 8, 9)\n>>>[t[i] for i in range(0, len(t), 2)]",
    "A": "[2, 3, 9]",
    "B": "[1, 2, 4, 3, 8, 9]",
    "C": "[1, 4, 8]",
    "D": "(1, 4, 8)\n",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q243",
    "Question": "What will be the output of the following Python code?\n\nd = {\"john\":40, \"peter\":45}\nd[\"john\"]",
    "A": "40",
    "B": "45",
    "C": "“peter”",
    "D": "“john”",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q244",
    "Question": "What will be the output of the following Python code?\n\n>>>t = (1, 2)\n>>>2 * t",
    "A": "(1, 2, 1, 2)",
    "B": "[1, 2, 1, 2]",
    "C": "(1, 1, 2, 2)",
    "D": "[1, 1, 2, 2]",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q245",
    "Question": "What will be the output of the following Python code?\n\n>>>t1 = (1, 2, 4, 3)\n>>>t2 = (1, 2, 3, 4)\n>>>t1 < t2",
    "A": "TRUE",
    "B": "FALSE",
    "C": "Error",
    "D": "None",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q246",
    "Question": "What will be the output of the following Python code?\n\n>>>my_tuple = (1, 2, 3, 4)\n>>>my_tuple.append( (5, 6, 7) )\n>>>print len(my_tuple)",
    "A": "1",
    "B": "2",
    "C": "5",
    "D": "Error",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q247",
    "Question": "If a=(1,2,3,4), a[1:-1] is _________",
    "A": "Error, tuple slicing doesn’t exist",
    "B": "[2,3]",
    "C": "(2,3,4)",
    "D": "(2,3)",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q248",
    "Question": "What will be the output of the following Python code?\n\n>>> a=(1,2,3,4)\n>>> del(a[2])",
    "A": "Now, a=(1,2,4)",
    "B": "Now, a=(1,3,4)",
    "C": "Now a=(3,4)",
    "D": "Error as tuple is immutable",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_2"
  },
  {
    "Question ID": "Q249",
    "Question": "Which of the following statements create a dictionary?",
    "A": "d = {}",
    "B": " d = {\"john\":40, \"peter\":45}",
    "C": " d = {40:\"john\", 45:\"peter\"}",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5"
  },
  {
    "Question ID": "Q250",
    "Question": "Which of the following can be used as keys for dictionaries?",
    "A": "Lists",
    "B": "Tuples",
    "C": "Sets",
    "D": "Dictionaries",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q251",
    "Question": "What will be the output of the following code?\n\ndic={1:’r’,2:6,1:5,3:’y’}\ndic",
    "A": "{1: 5, 2: 6, 3: 'y'}",
    "B": "{1: 5, 2: 6,1:5, 3: 'y'}",
    "C": "{1: ‘r’, 2: 6, 3: 'y'}",
    "D": "Error",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q252",
    "Question": "Which of the following is/are features of dictionaries?",
    "A": "Immutability",
    "B": "Allows Duplicate keys and values",
    "C": "Dynamic",
    "D": "All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q253",
    "Question": "Which of the following symbols form the body of a dictionary?",
    "A": "{,},=",
    "B": "{,},;",
    "C": " {,},:",
    "D": "{,},-",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q254",
    "Question": "What will be the output of the following code?\n\ndic={‘a’:4,’t’:9,’e’:7}\ndic[0]",
    "A": "a",
    "B": "4",
    "C": "‘a’:4",
    "D": "KeyError",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q255",
    "Question": "Which of the following deletes the 3rd key-value pair in the following dictionary?\n\ndic={1:1,2:4,3:9,4:16,5:25}",
    "A": "del dic[3]",
    "B": "dic.pop(3)",
    "C": "Both a and b",
    "D": "Dictionaries are immutable",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q256",
    "Question": "What will be the output of the following code?\n\ndic={0:’r’,4:’y’,7.6:5}\ndic[2]=5\ndic",
    "A": "{0: 'r', 4: 'y', 7.6: 5, 2: 5}",
    "B": "{0: 'r', 2: 5, 4: 'y', 7.6: 5}",
    "C": "{2: 5, 0: 'r', 4: 'y', 7.6: 5}",
    "D": "None of these",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q257",
    "Question": "Which of the following built-in methods/functions try to modify a dictionary?",
    "A": "Keys",
    "B": "cmp",
    "C": "sorted",
    "D": "fromkeys",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q258",
    "Question": "What will be the output of the following code?\n\ndic={1:1,2:2,3:4,4:5}\ndic.popitem(4)",
    "A": "(4,5)",
    "B": "4",
    "C": "5",
    "D": "TypeError",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q259",
    "Question": "What will be the output of the following code?\n\ndic={‘a’:4,’h’:2,’w’:0,5:4.3}\ndic.clear()\ndic",
    "A": " {}",
    "B": "{:}",
    "C": "NameError",
    "D": "None of these",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q260",
    "Question": "Which of the following gives the out put as 3 if the dictionary is\n\ndic={‘a’:{3:4,6:2},’t’:5,7:{1:3,9:1}}",
    "A": "dic[‘a’][1]",
    "B": "dic[7][1]",
    "C": "dic[0][1]",
    "D": " dic[7][0]",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q261",
    "Question": "What will be the output of the following code?\n\ndic={1:’a’,2:’e’,3:’i’,4:’o’,5:’u’}\ntype(dic.keys())",
    "A": "<class 'dict_keys'>",
    "B": "<class 'list'>",
    "C": "<class 'set'>",
    "D": "<class 'tuple'>",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q262",
    "Question": "Which of the following operations can be performed on a dictionary?",
    "A": "Addition",
    "B": "Multiplication",
    "C": "Membership",
    "D": "All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q263",
    "Question": "What will be the output of the following code?\n\ndic={1.2:2,0.4:4,6.5:5}\nfor i in dic:\n    print(i,end=” “)",
    "A": "2 4 2005",
    "B": "1.2 0.4 6.5",
    "C": "1.2:2 0.4:4 6.5:4",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_3"
  },
  {
    "Question ID": "Q264",
    "Question": "What will be the output of the following Python code snippet? z=set('abc$de')\n'a' in z",
    "A": "Error",
    "B": "TRUE",
    "C": "FALSE",
    "D": "No output",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "ds_5_4"
  },
  {
    "Question ID": "Q265",
    "Question": "Where is function defined?",
    "A": "Module",
    "B": "Class",
    "C": "Another function",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4"
  },
  {
    "Question ID": "Q266",
    "Question": "Python supports the creation of anonymous functions at runtime, using a construct called __________",
    "A": "lambda",
    "B": "pi",
    "C": "anonymous",
    "D": "none of the mentioned",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_1"
  },
  {
    "Question ID": "Q267",
    "Question": "What is the correct way to declare a function in Python?",
    "A": "function my_function():",
    "B": "def my_function():",
    "C": "my_function():",
    "D": "func my_function():",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_1"
  },
  {
    "Question ID": "Q268",
    "Question": "What will be the output of the following Python code?  print(\"abc. DEF\".capitalize())",
    "A": "Abc. def",
    "B": "abc. def",
    "C": "Abc. Def",
    "D": "ABC. DEF",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_2"
  },
  {
    "Question ID": "Q269",
    "Question": "What is output of print(math.pow(3, 2))?",
    "A": "9",
    "B": "None",
    "C": "9",
    "D": "None of the mentioned",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_2"
  },
  {
    "Question ID": "Q270",
    "Question": "What is the length of sys.argv?",
    "A": "number of arguments",
    "B": "number of arguments + 1",
    "C": "number of arguments \" 1",
    "D": "none of the mentioned",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_2"
  },
  {
    "Question ID": "Q271",
    "Question": "What will be the output of the following Python function? len([\"hello\",2, 4, 6])",
    "A": "Error",
    "B": "6",
    "C": "4",
    "D": "3",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_3"
  },
  {
    "Question ID": "Q272",
    "Question": "What will be the output of the following Python expression? round(4.576)",
    "A": "4",
    "B": "4.6",
    "C": "5",
    "D": "4.5",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_3"
  },
  {
    "Question ID": "Q273",
    "Question": "What is the purpose of the init() method in a Python class?",
    "A": "It is used to define the class methods",
    "B": "It is used to create a new object of the class",
    "C": "It is used to initialize the attributes of the object when it is created",
    "D": "It is used to delete an object of the class",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q274",
    "Question": "Which of the following is not a function argument in Python?",
    "A": "Keyword",
    "B": "Arbitrary",
    "C": "Default",
    "D": "None of these",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4"
  },
  {
    "Question ID": "Q275",
    "Question": "Which of the following is not true about function arguments?",
    "A": "A function in Python can have any number of arguments",
    "B": "All the arguments must be passed while calling the function",
    "C": "A function can be defined without any argument",
    "D": "All the above",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q276",
    "Question": "What is the correct syntax to pass variable length arguments?",
    "A": "Asterisk followed by the underscore and the variable name",
    "B": "Asterisk followed by the variable name",
    "C": "Asterisk followed by the variable name and square brackets",
    "D": "Variable name followed by the square barckets",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q277",
    "Question": "What is the output of the following code?\n\na=5\n\ndef func(a):\n\n    print(a)\n\n func(3)",
    "A": "3",
    "B": "5",
    "C": " Either 3 or 5",
    "D": " SyntaxError",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q278",
    "Question": "Which of the following is true about keyword arguments?",
    "A": "We can pass the keywords as the arguments",
    "B": "We can give the argument in a particular order",
    "C": "We can equate the value to the corresponding parameter name while passing",
    "D": "All the above",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q279",
    "Question": "Find the output of the below code.\na=’PythonGeeks’\n\ndef func(a):\n\n    a=’Python’\n\n    print(a)\n\n func(‘Coding’)",
    "A": "PythonGeeks",
    "B": "Coding",
    "C": "Python",
    "D": " SyntaxError",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q280",
    "Question": "Find the output of the below code.\n\ndef add(a=4,b=0):\n\n    return a+b\n\n add(5)",
    "A": "5",
    "B": "9",
    "C": "4",
    "D": "None of the above",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q281",
    "Question": "Which of the following do not give any error?",
    "A": "def pow(a=1,b): return a**b\\n pow(5)",
    "B": "def pow(a,b=0): return a**b\\n pow(3)",
    "C": " def pow(a,b): return a**b\\n pow(6)",
    "D": "None of the above",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q282",
    "Question": "Find the output of the below code?\ndef op(a,b,c):\n\n    print(a+b-c)\n\nop(a=5,c=7,b=2)\n\nop(c=7,b=2,a=5)",
    "A": "0 10",
    "B": "10 10",
    "C": " 0 0",
    "D": "10 0",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q283",
    "Question": "def func(v1,v2,v3):\n\n    print(v1+v2+v3)\n\nfunc(‘rge’,v2=’abc’,’prq’)",
    "A": "rgeabcprq",
    "B": "rge abc prq",
    "C": "rgeprqabc",
    "D": "SyntaxError",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q284",
    "Question": "Which of the following arguments solve the problem of number of arguments passed?",
    "A": "Variable length",
    "B": "Default",
    "C": "Keyword",
    "D": " Both a and b",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q285",
    "Question": "What is the output of the below code?\ndef func(v1,v2,v3,v4):\n\n    print(v1*v2/(v3*v4))\n\nfunc(4,8,9,)",
    "A": "3.555555556",
    "B": "ZeroDivisionError",
    "C": "TypeError",
    "D": " SyntaxError",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q286",
    "Question": "def fun(a,*b):\n\n    print(a+len(b))\n\nfun(3,8,9,’t’,4.0)",
    "A": "7",
    "B": "6",
    "C": "5",
    "D": " SyntaxError",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q287",
    "Question": "def avg(*x):\n\n    print(sum(x)/len(x))\n\navg(5,6)",
    "A": "5",
    "B": "5.5",
    "C": "TypeError",
    "D": "SyntaxError",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_4"
  },
  {
    "Question ID": "Q288",
    "Question": "What is the scope of a variable defined in a class in Python called?",
    "A": "Local scope",
    "B": "Global scope",
    "C": "Class scope",
    "D": "Instance scope",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q289",
    "Question": "Which of the following statements is true about global variables in Python?",
    "A": "Global variables can only be accessed within the function where they are defined.",
    "B": "Global variables are automatically accessible in all functions and blocks of code.",
    "C": "Global variables have limited visibility within the function where they are defined.",
    "D": "Global variables cannot be modified once defined.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q290",
    "Question": "What will happen if you try to access a local variable outside of its scope in Python?",
    "A": "A runtime error will occur",
    "B": "The variable will be accessible and retain its value.",
    "C": "The variable will be automatically converted to a global variable.",
    "D": "The variable will be accessible but will have a None value.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q291",
    "Question": "Which of the following defines the scope of a variable in Python?",
    "A": "The line number where the variable is declared.",
    "B": "The indentation level of the variable.",
    "C": " The function or block where the variable is defined.",
    "D": "The variable type used when declaring the variable.",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q292",
    "Question": "What is the scope of a variable defined as a function parameter in Python?",
    "A": "Local scope",
    "B": "Global scope",
    "C": "Function scope",
    "D": "Enclosing scope",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q293",
    "Question": "What is the concept of variable shadowing in Python?",
    "A": "It refers to the process of defining a local variable with the same name as a global variable, thereby hiding or shadowing the global variable within a specific scope.",
    "B": "It results in the inability to access the global variable from within the scope of the local variable.",
    "C": "It can be avoided by using different variable names for local and global variables.",
    "D": "All of the above.",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q294",
    "Question": "What is the purpose of the nonlocal keyword in Python?",
    "A": "It is used to explicitly declare a variable as non-local, allowing it to be modified within an enclosing scope.",
    "B": "It is used to declare a variable as non-global, restricting its scope to the current function or block.",
    "C": "It is used to prevent variable shadowing in nested functions.",
    "D": "None of the above.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q295",
    "Question": "Which of the following is true regarding the lifetime of variables in Python?",
    "A": "Variables are destroyed as soon as the program execution reaches the end of the script.",
    "B": "Variables with local scope exist only during the execution of the function or block in which they are defined.",
    "C": "Variables with global scope persist throughout the entire execution of the program",
    "D": "All variables have a fixed lifetime of one minute.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q296",
    "Question": "Which scope has the highest priority when resolving variable names in Python?",
    "A": "Global scope",
    "B": "Local scope",
    "C": "Built-in scope",
    "D": "Enclosing scope",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q297",
    "Question": "What happens when a variable with the same name exists in both the global and local scopes in Python?",
    "A": "The global variable takes precedence over the local variable.",
    "B": "The local variable takes precedence over the global variable.",
    "C": "Python throws an error, as it does not allow duplicate variable names.",
    "D": "The variable names are automatically concatenated to create a new variable.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q298",
    "Question": "In Python, what happens to a variable when it goes out of scope?",
    "A": "The variable is automatically deleted from memory.",
    "B": "The variable becomes inaccessible but remains in memory until the program terminates.",
    "C": "The variable is converted to a global variable and persists throughout the program.",
    "D": "The variable is marked for garbage collection and removed from memory.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q299",
    "Question": "Which of the following is true about local variables?",
    "A": "Accessible throughout the program",
    "B": "Accessible in all functions",
    "C": "Accessible only in that function",
    "D": "Accessible only in the similar functions",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q300",
    "Question": "Which of the following is not the scope of a variable?",
    "A": "Enclosed",
    "B": "Global",
    "C": "Built-in",
    "D": "Derived",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q301",
    "Question": "name=”Python”\n\ndef func():\n\n    name=”PythonGeeks”\n\nprint(name)",
    "A": "Python",
    "B": "PythonGeeks",
    "C": "PythonPythonGeeks",
    "D": "Error",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q302",
    "Question": "Which of the following is a built-in variable?",
    "A": "TRUE",
    "B": "in",
    "C": "Float",
    "D": "print()",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q303",
    "Question": "n=4\n\ndef f1():\n\n    n=n**4\n\n    print(n)\n\nf1()",
    "A": "error",
    "B": "4",
    "C": "14",
    "D": "256",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q304",
    "Question": "Which keyword is used to reflect the changes done in the nested function at the outer function",
    "A": "enclosed",
    "B": "nonlocal",
    "C": "non local",
    "D": "Nonlocal",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q305",
    "Question": "n=6\n\ndef fun1():\n\n    n=4.5\n\n    def fun2():\n\n        global n\n\n        n=3.2\n\n    fun2()\n\nfun1()\n\nprint(n)",
    "A": "3.2",
    "B": "6",
    "C": "4.5",
    "D": "None",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q306",
    "Question": "Which of the following is the output of the following code?\n\ndef func1():\n    num=12\n    def func2():\n        nonlocal num\n        num=7\n    func2()\nfunc1()\nprint(num)",
    "A": "12",
    "B": "7",
    "C": "Error",
    "D": "None",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q307",
    "Question": "x=4\n\ndef fun():\n\n    a=4\n\n    global x\n\n    x=4\n\n    \n\n    print(a)\n\nfun()",
    "A": "4",
    "B": "2",
    "C": "0",
    "D": "None",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q308",
    "Question": "n=3\n\ndef fun1():\n\n    global n=1\n\n \n\nfun1()\n\nprint(n)",
    "A": "3",
    "B": "1",
    "C": "Error",
    "D": "None",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q309",
    "Question": "What is the scope of the nested functions?",
    "A": "Nonlocal",
    "B": "Local",
    "C": "Global",
    "D": "Built-in",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q310",
    "Question": "def fun():\n\n    x=x+1\n\n    print(x) \n\nx=12\n\nprint(x)",
    "A": "13",
    "B": "12",
    "C": "Error",
    "D": "None",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q311",
    "Question": "What is the output of the following code?\n\ndef fun1():\n    name=”a”\n\nprint(fun1())\nprint(name)",
    "A": "None a",
    "B": "“a” “a”",
    "C": "a a",
    "D": "None Error",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "func_4_5"
  },
  {
    "Question ID": "Q312",
    "Question": "What is the purpose of the Python interpreter?",
    "A": "It converts Python code into machine code.",
    "B": "It executes Python code line by line.",
    "C": "It provides a graphical user interface for Python development.",
    "D": "It checks for syntax errors in Python code.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_1"
  },
  {
    "Question ID": "Q313",
    "Question": "What is the role of indentation in Python?",
    "A": "Indentation is optional in Python and does not affect the code execution.",
    "B": "Indentation is used to indicate the end of a code block.",
    "C": "Indentation is used to improve code readability and structure.",
    "D": "Indentation is required for Python code to run correctly.",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_1"
  },
  {
    "Question ID": "Q314",
    "Question": "What is the Python Standard Library?",
    "A": "It is a library used for advanced mathematical computations.",
    "B": "It is a collection of third-party packages and modules for Python.",
    "C": "It is a library used for web development with Python",
    "D": "It is a collection of modules and packages that come with Python installation.",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "intro_1"
  },
  {
    "Question ID": "Q315",
    "Question": "What is Python?",
    "A": "A programming language",
    "B": "A game engine",
    "C": "An operating system",
    "D": "A browser extension",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "intro_1"
  },
  {
    "Question ID": "Q316",
    "Question": "Which of the following is NOT a feature of Python?",
    "A": "Dynamic typing",
    "B": "Strong support for functional programming",
    "C": "Statically-typed variables",
    "D": "Automatic memory management (garbage collection)",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_2"
  },
  {
    "Question ID": "Q317",
    "Question": "What does the term \"Pythonic\" mean?",
    "A": "It refers to the use of Python-specific syntax and idioms.",
    "B": "It indicates a code written in Python 2.x version.",
    "C": "It implies a code written by the core developers of Python.",
    "D": "It signifies the use of Python for scientific computing and data analysis",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_2"
  },
  {
    "Question ID": "Q318",
    "Question": "Which type of Programming does Python support?",
    "A": "object-oriented programming",
    "B": "structured programming",
    "C": "functional programming",
    "D": "all of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_2"
  },
  {
    "Question ID": "Q319",
    "Question": "Which command is used to activate a virtual environment in Python?",
    "A": "source activate",
    "B": "activate venv",
    "C": "venv activate",
    "D": "source venv/bin/activate",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_3"
  },
  {
    "Question ID": "Q320",
    "Question": "Which of the following is the recommended way to install Python packages and manage dependencies?",
    "A": "Using the pip package manager",
    "B": "Manually downloading and installing package files",
    "C": "Using the easy_install package manager",
    "D": "Using the conda package manager",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_3"
  },
  {
    "Question ID": "Q321",
    "Question": "Which command is used to create a virtual environment in Python?",
    "A": "pyenv create",
    "B": "virtualenv create",
    "C": "python -m venv",
    "D": "conda create",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_3"
  },
  {
    "Question ID": "Q322",
    "Question": "What is the output of the following code? x = 5 y = 2 print(x % y)",
    "A": "2",
    "B": "3",
    "C": "2.5",
    "D": "0",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "intro_1_4"
  },
  {
    "Question ID": "Q323",
    "Question": "Which of the following will run without errors?",
    "A": "round(45.8)",
    "B": " round(6352.898,2,5)",
    "C": "round()",
    "D": "round(7463.123,2,1)",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_1"
  },
  {
    "Question ID": "Q324",
    "Question": "Which of the following is true for variable names in Python?",
    "A": "underscore and ampersand are the only two special characters allowed",
    "B": "unlimited length",
    "C": "all private members must have leading and trailing underscores",
    "D": "none of the mentioned",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2"
  },
  {
    "Question ID": "Q325",
    "Question": "Which of the following is not a core data type in Python programming?",
    "A": "Tuples",
    "B": "Lists",
    "C": "Class",
    "D": "Dictionary",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2"
  },
  {
    "Question ID": "Q326",
    "Question": "What error occurs when you execute the following Python code snippet? apple = mango",
    "A": "SyntaxError",
    "B": "NameError",
    "C": "ValueError",
    "D": "TypeError",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_1"
  },
  {
    "Question ID": "Q327",
    "Question": "Which of the following is a correct syntax for assigning a value to a variable in Python?",
    "A": "variable = value",
    "B": "value = variable",
    "C": "variable == value",
    "D": "value == variable",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_1"
  },
  {
    "Question ID": "Q328",
    "Question": "Which of the following is an invalid statement?",
    "A": "abc = 1,000,000",
    "B": "a b c = 1000 2000 3000",
    "C": "a,b,c = 1000, 2000, 3000",
    "D": "a_b_c = 1,000,000",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_1"
  },
  {
    "Question ID": "Q329",
    "Question": "Which of the following is invalid?",
    "A": "_a = 1",
    "B": "__a = 1",
    "C": "__str__ = 1",
    "D": "none of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2"
  },
  {
    "Question ID": "Q330",
    "Question": "What will be the output of the following Python expression if x=56.236?   print(\"%.2f\"%x)",
    "A": "56.236",
    "B": "56.23",
    "C": "56",
    "D": "56.24",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q331",
    "Question": "Which of the following is a feature of Python DocString?",
    "A": "In Python all functions should have a docstring",
    "B": "Docstrings can be accessed by the __doc__ attribute on objects",
    "C": " It provides a convenient way of associating documentation with Python modules, functions, classes, and methods",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q332",
    "Question": "What function do you use to read a string?",
    "A": "input(\"Enter a string\")",
    "B": "eval(input(\"Enter a string\"))",
    "C": "enter(\"Enter a string\")",
    "D": "eval(enter(\"Enter a string\"))",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q333",
    "Question": "Which of the following is NOT a Python data type?",
    "A": "integer",
    "B": "float",
    "C": "string",
    "D": "loop",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q334",
    "Question": "What will be the output of the following Python statement?\n\n>>>\"abcd\"[2:]",
    "A": "a",
    "B": "ab",
    "C": "cd",
    "D": "dc",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q335",
    "Question": "What will be the output of the following Python statement?\n\n>>>print('new' 'line')",
    "A": "Error",
    "B": "Output equivalent to print ‘new\\nline’",
    "C": "newline",
    "D": "new line",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q336",
    "Question": "What will be the output of the following Python statement?\n\n>>>\"a\"+\"bc\"",
    "A": "a",
    "B": "bc",
    "C": "bca",
    "D": "abc",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q337",
    "Question": "What will be the output of the following Python code?\n\n>>> str1 = 'hello'\n>>> str2 = ','\n>>> str3 = 'world'\n>>> str1[-1:]",
    "A": "olleh",
    "B": "hello",
    "C": "h",
    "D": "o",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q338",
    "Question": "What will be the output of the following Python code?\n\n>>>print (r\"\\nhello\")",
    "A": "a new line and hello",
    "B": "\\nhello",
    "C": "the letter r and then hello",
    "D": "error",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q339",
    "Question": "What will be the output of the following Python code?\n\n>>>str1=\"helloworld\"\n>>>str1[::-1]",
    "A": "dlrowolleh",
    "B": "hello",
    "C": "world",
    "D": "helloworld",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q340",
    "Question": " What will be the output of the following Python code?\n\n>>>example = \"snow world\"\n>>>example[3] = 's'\n>>>print example",
    "A": "snow",
    "B": "snow world",
    "C": "Error",
    "D": "snos world",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q341",
    "Question": " What will be the output of the following Python code?\n\n>>>max(\"what are you\")",
    "A": "error",
    "B": "u",
    "C": "t",
    "D": "y",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q342",
    "Question": "Given a string example=”hello” what is the output of example.count(‘l’)?",
    "A": "2",
    "B": "1",
    "C": "None",
    "D": "0",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q343",
    "Question": "What will be the output of the following Python code?\n\n>>>example = \"helle\"\n>>>example.find(\"e\")",
    "A": "Error",
    "B": "-1",
    "C": "1",
    "D": "0",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q344",
    "Question": "Which of the following statement prints hello\\example\\test.txt?",
    "A": "print(“hello\\example\\test.txt”)",
    "B": "print(“hello\\\\example\\\\test.txt”)",
    "C": "print(“hello\\”example\\”test.txt”)",
    "D": "print(“hello”\\example”\\test.txt”)",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q345",
    "Question": "The format function, when applied on a string returns __________",
    "A": "Error",
    "B": "int",
    "C": "bool\n",
    "D": "str",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q346",
    "Question": "What is the output of print(2 + 3 * 4)?",
    "A": "20",
    "B": "14",
    "C": "12",
    "D": "18",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_2"
  },
  {
    "Question ID": "Q347",
    "Question": "How can you explicitly convert a value to a specific data type in Python?",
    "A": "By using the change() function.",
    "B": "By assigning a new value of the desired data type to the variable",
    "C": "By using the convert() keyword.",
    "D": "By using the appropriate type conversion function.",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_3"
  },
  {
    "Question ID": "Q348",
    "Question": "What happens if you try to convert a string to a boolean value using the bool() function?",
    "A": "The conversion fails and raises a ValueError",
    "B": "The string is converted to the value True",
    "C": "The string is converted to the value False.",
    "D": "The conversion ignores the string and returns the default boolean value.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_3"
  },
  {
    "Question ID": "Q349",
    "Question": "When converting a floating-point number to an integer using the int() function, what happens to the decimal part of the number?",
    "A": "It is rounded up to the nearest integer.",
    "B": "It is rounded down to the nearest integer.",
    "C": "It is truncated, discarding the decimal part.",
    "D": "It is converted to a separate decimal value.",
    "Correct Answer": "C",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_3"
  },
  {
    "Question ID": "Q350",
    "Question": "What is the purpose of type conversion in Python?",
    "A": "To optimize the memory usage of variables.",
    "B": "To convert data from one type to another for compatibility or manipulation.",
    "C": "To restrict the available operations on variables.",
    "D": "To enforce strict typing rules in Python.",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_3"
  },
  {
    "Question ID": "Q351",
    "Question": "Which function is used to convert a value to a boolean in Python, considering its truthiness?",
    "A": "int()",
    "B": "float()",
    "C": "str()",
    "D": "bool()",
    "Correct Answer": "D",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_3"
  },
  {
    "Question ID": "Q352",
    "Question": "Which of the following is a valid way to write a comment in Python?",
    "A": "/* This is a comment */",
    "B": "# This is a comment",
    "C": "-- This is a comment --",
    "D": "<!-- This is a comment -->",
    "Correct Answer": "B",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_4"
  },
  {
    "Question ID": "Q353",
    "Question": "Which of the following is a recommended best practice for using comments in Python?",
    "A": "Use comments sparingly, only when absolutely necessary.",
    "B": "Include comments for every line of code.",
    "C": "Write comments in a different programming language.",
    "D": "Remove all comments before sharing or publishing code.",
    "Correct Answer": "A",
    "Difficulty Level": "Beginner",
    "tag": "vardt_2_4"
  },
  {
    "Question ID": "Q354",
    "Question": "What is debugging in the context of programming?",
    "A": "The process of removing bugs from a program",
    "B": "The process of writing new code",
    "C": "The process of compiling a program",
    "D": "The process of testing a program",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11"
  },
  {
    "Question ID": "Q355",
    "Question": "Which of the following is NOT a common debugging technique?",
    "A": "Using print statements",
    "B": "Utilizing a debugger tool",
    "C": "Analyzing error messages",
    "D": "Adding more bugs to the code",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11"
  },
  {
    "Question ID": "Q356",
    "Question": "What is the role of a debugger tool in the debugging process?",
    "A": "To automatically fix all the bugs in the code",
    "B": "To provide insights into the program's execution and allow step-by-step analysis",
    "C": "To generate error messages for debugging purposes",
    "D": "To speed up the execution of the program",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11"
  },
  {
    "Question ID": "Q357",
    "Question": "Which of the following is a commonly used debugger tool in Python?",
    "A": "DebugPy",
    "B": "DebugTool",
    "C": "DebugMaster",
    "D": "DebugWizard",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q358",
    "Question": "What does a breakpoint indicate in the context of debugging?",
    "A": "A location in the code where the program stops for analysis",
    "B": "A syntax error in the code",
    "C": "A feature of the debugger tool",
    "D": "A runtime error in the code",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q359",
    "Question": "What is the purpose of stepping through code during debugging?",
    "A": "To skip unnecessary lines of code",
    "B": "To identify and fix bugs in the code",
    "C": "To execute the code faster",
    "D": "To execute the code repeatedly",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q360",
    "Question": "What is the advantage of using a debugger tool over print statements for debugging?",
    "A": "Print statements provide more detailed information than debugger tools",
    "B": "Debugger tools allow for a more interactive and in-depth analysis of the code",
    "C": "Print statements can be used without the need for additional tools or software",
    "D": "Debugger tools are less efficient and slower than print statements",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q361",
    "Question": "Which of the following statements is true about debugging techniques?",
    "A": "Debugging techniques can completely eliminate all bugs from a program.",
    "B": "Debugging techniques are only applicable to large-scale programs.",
    "C": "Different bugs may require different debugging techniques.",
    "D": "Debugging techniques are not necessary if the code is error-free.",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q362",
    "Question": "What does the acronym \"REPL\" stand for in the context of debugging?",
    "A": "Read, Execute, Print, Loop",
    "B": "Run, Evaluate, Print, Loop",
    "C": "Read, Execute, Print, Log",
    "D": "Run, Edit, Print, Loop",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q363",
    "Question": "What is the purpose of using assertions for debugging?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To validate assumptions about the code and detect errors",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q364",
    "Question": "Which of the following debugging techniques allows you to simulate and test specific parts of the code in isolation?",
    "A": "Unit testing",
    "B": "Code profiling",
    "C": "Regression testing",
    "D": "Static analysis",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q365",
    "Question": "What is the purpose of code profiling in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To measure the performance of the code and identify bottlenecks",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q366",
    "Question": "What is the purpose of a traceback in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To display the values of variables at specific points in the code",
    "D": "To provide information about the sequence of function calls leading to an error",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q367",
    "Question": "What is the purpose of using try-except blocks for debugging?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To handle and recover from exceptions or errors",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q368",
    "Question": "Which of the following is a common technique for debugging concurrency-related issues?",
    "A": "Using print statements strategically",
    "B": "Analyzing error messages",
    "C": "Using a debugger tool with support for concurrent programs",
    "D": "Adding more threads to the program",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q369",
    "Question": "What is the purpose of using breakpoints during debugging?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To pause the program's execution at specific points for analysis",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q370",
    "Question": "Which of the following is a common technique for debugging memory-related issues?",
    "A": "Using print statements to track memory usage",
    "B": "Analyzing error messages",
    "C": "Using a memory profiler tool",
    "D": "Increasing the memory allocation for the program",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q371",
    "Question": "What is the purpose of code review in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To identify potential bugs or issues by analyzing the code",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q372",
    "Question": "Which of the following is a common technique for debugging performance-related issues?",
    "A": "Using print statements to track the execution time of code segments",
    "B": "Analyzing error messages",
    "C": "Using a profiler tool to measure the program's performance",
    "D": "Increasing the processor speed of the computer",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q373",
    "Question": "What is the purpose of using version control systems in the debugging process?",
    "A": "To keep track of changes in the code and easily revert to previous versions",
    "B": "To track the progress and events in the program",
    "C": "To generate error messages during the execution of the program",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q374",
    "Question": "What is the purpose of code refactoring in the debugging process?",
    "A": "To keep track of changes in the code and easily revert to previous versions",
    "B": "To track the progress and events in the program",
    "C": "To display the values of variables at specific points in the code",
    "D": "To improve the code's structure and readability without changing its functionality",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q375",
    "Question": "Which of the following is a common technique for debugging network-related issues?",
    "A": "Using print statements to track network traffic",
    "B": "Analyzing error messages",
    "C": "Using network debugging tools and sniffers",
    "D": "Increasing the internet speed of the computer",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q376",
    "Question": "What is the purpose of using a linter in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To enforce coding standards and identify potential issues in the code",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q377",
    "Question": "Which of the following is a common technique for debugging security-related issues?",
    "A": "Using print statements to track security breaches",
    "B": "Using security scanning tools and vulnerability assessments",
    "C": "Analyzing error messages",
    "D": "Increasing the security settings of the computer",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q378",
    "Question": "What is the purpose of using a code formatter in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To display the values of variables at specific points in the code",
    "D": "To automatically format the code according to a specific style guide",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q379",
    "Question": "Which of the following is a common technique for debugging database-related issues?",
    "A": "Using print statements to track database queries",
    "B": "Using database management tools and query analyzers",
    "C": "Analyzing error messages",
    "D": "Increasing the database size",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q380",
    "Question": "What is the purpose of using a code review checklist in the debugging process?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To ensure that specific aspects of the code are reviewed for potential issues",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_1"
  },
  {
    "Question ID": "Q381",
    "Question": "What is the primary difference between using print statements and logging in Python?",
    "A": "Print statements are more flexible than logging.",
    "B": "Logging allows for more granular control over the output than print statements.",
    "C": "Print statements are faster than logging",
    "D": "Logging is more suitable for debugging than print statements.",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q382",
    "Question": "What is the purpose of using print statements for debugging?",
    "A": "To display the values of variables at specific points in the code",
    "B": "To slow down the execution of the program",
    "C": "To enhance the performance of the code",
    "D": "To introduce intentional errors for testing purposes",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q383",
    "Question": "What is the purpose of using logging for debugging?",
    "A": "To generate error messages during the execution of the program",
    "B": "To slow down the program's execution",
    "C": "To track the progress and events in the program",
    "D": "To display the values of variables at specific points in the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q384",
    "Question": "Which of the following is a common mistake to avoid when using print statements for debugging?",
    "A": "Using meaningful variable names in print statements",
    "B": "Placing print statements at critical points in the code",
    "C": "Forgetting to remove print statements after debugging",
    "D": "Using print statements instead of a debugger tool",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q385",
    "Question": "What is the recommended practice for using print statements and logging for debugging purposes?",
    "A": "Use print statements for quick and temporary debugging, and logging for more structured and long-term debugging",
    "B": "Use print statements exclusively for all debugging scenarios",
    "C": "Use logging exclusively for all debugging scenarios",
    "D": "Use print statements and logging interchangeably for all debugging scenarios",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q386",
    "Question": "What is the purpose of using logging levels in the logging module?",
    "A": "To enable or disable the logging statements in the code",
    "B": "To determine the verbosity of the logging output",
    "C": "To control the severity of the logged messages",
    "D": "To track the progress and events in the program",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q387",
    "Question": "Which method is used to remove a handler from a logger in the logging module?",
    "A": "logger.removeHandler()",
    "B": "logger.setLevel()",
    "C": "logger.debug()",
    "D": "logger.info()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q388",
    "Question": "Which of the following is true about logging levels in Python?",
    "A": "Messages with a lower severity level will be logged by default",
    "B": "Messages with a higher severity level will be logged by default",
    "C": "Messages with the same severity level will be logged by default",
    "D": "All log messages will be logged by default",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q389",
    "Question": "Which method is used to add a handler to a logger in the logging module?",
    "A": "logger.addHandler()",
    "B": "logger.setLevel()",
    "C": "logger.debug()",
    "D": "logger.info()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q390",
    "Question": "What is the purpose of configuring the logging module in Python?",
    "A": "To enable or disable the logging statements in the code",
    "B": "To determine the verbosity of the logging output",
    "C": "To customize the format and destination of the log messages",
    "D": "To track the progress and events in the program",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q391",
    "Question": "Which logging method is used to log an error message?",
    "A": "logger.debug()",
    "B": "logger.info()",
    "C": "logger.warning()",
    "D": "logger.error()",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q392",
    "Question": "Which logging method is used to log a warning message?",
    "A": "logger.debug()",
    "B": "logger.info()",
    "C": "logger.warning()",
    "D": "logger.error()",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q393",
    "Question": "Which logging method is used to log an informative message?",
    "A": "logger.debug()",
    "B": "logger.info()",
    "C": "logger.warning()",
    "D": "logger.error()",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q394",
    "Question": "What is the purpose of using formatting placeholders in logging messages?",
    "A": "To display the values of variables at specific points in the code",
    "B": "To generate error messages during program execution",
    "C": "To track the progress and events in the program",
    "D": "To include dynamic values in the log messages",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q395",
    "Question": "Which logging method is used to log a message with the lowest severity level?",
    "A": "logger.debug()",
    "B": "logger.info()",
    "C": "logger.warning()",
    "D": "logger.error()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q396",
    "Question": "Which of the following is true about the default logging level in Python?",
    "A": "It is set to DEBUG",
    "B": "It is set to INFO",
    "C": "It is set to WARNING",
    "D": "It is set to ERROR",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q397",
    "Question": "What does the logging module provide in Python?",
    "A": "Functions for generating error messages during program execution",
    "B": "Tools for tracking the progress and events in the program",
    "C": "Methods for displaying the values of variables at specific points in the code",
    "D": "A flexible framework for recording log messages during program execution",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q398",
    "Question": "Which of the following logging levels is typically used for informative messages?",
    "A": "DEBUG",
    "B": "INFO",
    "C": "WARNING",
    "D": "ERROR",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q399",
    "Question": "What is the purpose of setting the logging level in Python?",
    "A": "To enable or disable the logging statements in the code",
    "B": "To determine the verbosity of the logging output",
    "C": "To control the severity of the logged messages",
    "D": "To track the progress and events in the program",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q400",
    "Question": "Which of the following levels of logging is the highest in severity?",
    "A": "DEBUG",
    "B": "INFO",
    "C": "WARNING",
    "D": "ERROR",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q401",
    "Question": "Which of the following is an advantage of using logging over print statements for debugging?",
    "A": "Logging statements can be easily removed after debugging",
    "B": "Logging provides more detailed information than print statements",
    "C": "Logging statements are faster and more efficient than print statements",
    "D": "Logging allows for real-time monitoring of the program's behavior",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q402",
    "Question": "What is the purpose of using logging for debugging?",
    "A": "To generate error messages during the execution of the program",
    "B": "To track the progress and events in the program",
    "C": "To display the values of variables at specific points in the code",
    "D": "To analyze the memory usage of the program",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q403",
    "Question": "What is the advantage of using print statements for debugging?",
    "A": "It provides a detailed trace of the program's execution",
    "B": "It allows for real-time monitoring of the program's behavior",
    "C": "It helps in identifying and fixing bugs in the code",
    "D": "It improves the performance of the code",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q404",
    "Question": "Which of the following is a common use case for using print statements for debugging?",
    "A": "Tracking the progress and events in the program",
    "B": "Generating error messages during the execution of the program",
    "C": "Displaying the values of variables at specific points in the code",
    "D": "Analyzing error messages",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "debug_11_2"
  },
  {
    "Question ID": "Q405",
    "Question": "When will the else part of try-except-else be executed?",
    "A": "always",
    "B": "when an exception occurs",
    "C": "when no exception occurs",
    "D": "when an exception occurs in to except block",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q406",
    "Question": "What will be the output of the following Python code?\nt[5]",
    "A": "IndexError",
    "B": "NameError",
    "C": "TypeError",
    "D": "ValeError",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q407",
    "Question": "What will be the output of the following Python code, if the time module has already been imported?\n\n4 + '3'",
    "A": "NameError",
    "B": "IndexError",
    "C": "ValueError",
    "D": "TypeError",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q408",
    "Question": "What will be the output of the following Python code?\n\nint('65.43')",
    "A": "ImportError",
    "B": "ValueError",
    "C": "TypeError",
    "D": "NameError",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q409",
    "Question": "Which of the following is not a standard exception in Python?",
    "A": "NameError",
    "B": "IOError",
    "C": "AssignmentError",
    "D": "ValueError",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10"
  },
  {
    "Question ID": "Q410",
    "Question": "An exception is ____________",
    "A": "an object",
    "B": "a special function",
    "C": "a standard module",
    "D": "a module",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10"
  },
  {
    "Question ID": "Q411",
    "Question": "_______________________ exceptions are raised as a result of an error in opening a particular file.",
    "A": "ValueError",
    "B": "TypeError",
    "C": "ImportError",
    "D": "IOError",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q412",
    "Question": "What happens when ‘1’ == 1 is executed?",
    "A": "we get a True",
    "B": "we get a False",
    "C": "an TypeError occurs",
    "D": "a ValueError occurs",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q413",
    "Question": "Which of the following statements is true?",
    "A": "The standard exceptions are automatically imported into Python programs",
    "B": "All raised standard exceptions must be handled in Python",
    "C": "When there is a deviation from the rules of a programming language, a semantic error is thrown",
    "D": "If any exception is thrown in try block, else block is executed",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_1"
  },
  {
    "Question ID": "Q414",
    "Question": "Which of the following is not an exception in Python?",
    "A": "FloatingPointError",
    "B": "KeyboardInterrupt",
    "C": "ImportError",
    "D": "None of the above",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10"
  },
  {
    "Question ID": "Q415",
    "Question": "Which of the following blocks will be executed whether an exception is thrown or not?",
    "A": "except",
    "B": "else",
    "C": "finally",
    "D": "assert",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q416",
    "Question": "How many except statements can a try-except block have?",
    "A": "zero",
    "B": "one",
    "C": "more than one",
    "D": "more than zero",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q417",
    "Question": "What is the output of the below code?\nn=5\n\ntry:\n\n    print(n,end=”)\n\nprint(‘!’,end=”)\n\nexcept:\n\n    print(‘!’)",
    "A": "5",
    "B": "5!",
    "C": "5!!",
    "D": "SyntaxError",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q418",
    "Question": "Find the output of the below code.\nname=’Python’\n\ntry:\n\n    print(Name,end=”)\n\nexcept:\n\n    print(“Exception”,end=”)\n\n    ",
    "A": "Python!",
    "B": " PythonException",
    "C": "Exception!",
    "D": "PythonException!",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q419",
    "Question": "What is the output of the below code?\ntry:\n\n    print([1,2,3,4][4])\n\nexcept Exception as ex:\n\n    print(ex)",
    "A": "4",
    "B": " list index out of range",
    "C": "Exception!",
    "D": "IndexError",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q420",
    "Question": "What is the output of the below code?\ntry:\n\n    div=5/0\n\nexcept (ZeroDivisionError,TypeError) as e:\n\n    print(e)\n\nexcept Exception as e:\n\n    print(e)",
    "A": "ZeroDivisionError",
    "B": " e",
    "C": "division by zero",
    "D": "SyntaxError",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q421",
    "Question": "What is the output of the below code?\nnum=4\n\ntry:\n\n    div=num//2\n\nexcept:\n\n    print(“Exception”)\n\nelse:\n\n    print(div)",
    "A": "Exception",
    "B": "2",
    "C": "2",
    "D": "Exception2",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q422",
    "Question": "What is the output of the below code?\ntry:\n\n    name=Python\n\nexcept SyntaxError:\n\n    print(‘E1’)\n\nexcept NameError:\n\n    print(‘E2’)",
    "A": "E1",
    "B": "E2",
    "C": " E1E2",
    "D": "TypeError",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q423",
    "Question": "Find the output of the below code.\ntry:\n\n    n=0\n\n    assert n>0\n\n    raise\n\nexcept:\n\n    print(“Exception”)",
    "A": " AssertionError",
    "B": " AssertionErrorException",
    "C": "Exception",
    "D": " None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "errhand_10_2"
  },
  {
    "Question ID": "Q424",
    "Question": "Which of the following is a correct way to read a file in Python?",
    "A": "read(file.txt)",
    "B": "open(file.txt)",
    "C": "with open(file.txt) as f:",
    "D": "read(file.txt 'r')",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q425",
    "Question": "Which one of the following is not attributes of file?",
    "A": "closed",
    "B": "softspace",
    "C": "rename",
    "D": "mode",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q426",
    "Question": "Which of the following isn't true about main modules?",
    "A": " When a python file is directly executed, it is considered main module of a program",
    "B": "Main modules may import any number of modules",
    "C": "Special name given to main modules is: __main__",
    "D": "Other main modules can import main modules",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q427",
    "Question": "Which is/are the basic I/O connections in file?",
    "A": "Standard Input",
    "B": "Standard Output",
    "C": "Standard Errors",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "io_6"
  },
  {
    "Question ID": "Q428",
    "Question": "Which function is used to read all the characters?",
    "A": "Read()",
    "B": "Readcharacters()",
    "C": "Readall()",
    "D": "Readchar()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q429",
    "Question": "To open a file c:\\scores.txt for reading, we use _____________",
    "A": "infile = open(“c:\\scores.txt”, “r”)",
    "B": "infile = open(“c:\\\\scores.txt”, “r”)",
    "C": "infile = open(file = “c:\\scores.txt”, “r”)",
    "D": "infile = open(file = “c:\\\\scores.txt”, “r”)",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q430",
    "Question": "To read two characters from a file object infile, we use ____________",
    "A": "infile.read(2)",
    "B": "infile.read()",
    "C": "infile.readline()",
    "D": "infile.readlines()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q431",
    "Question": "The readlines() method returns ____________",
    "A": "str",
    "B": "a list of lines",
    "C": "a list of single characters",
    "D": "a list of integers",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_1"
  },
  {
    "Question ID": "Q432",
    "Question": "Which of the following is not a valid attribute of a file object (fp)?",
    "A": "fp.name",
    "B": "fp.closed\n",
    "C": "fp.mode",
    "D": "fp.size",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_2"
  },
  {
    "Question ID": "Q433",
    "Question": "How do you get the current position within the file?",
    "A": "fp.seek()",
    "B": "fp.tell()",
    "C": "fp.loc",
    "D": "fp.pos",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_2"
  },
  {
    "Question ID": "Q434",
    "Question": "Which are the two built-in functions to read a line of text from standard input, which by default comes from the keyboard?",
    "A": "Raw_input & Input",
    "B": "Input & Scan",
    "C": "Scan & Scanner",
    "D": "Scanner",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_2"
  },
  {
    "Question ID": "Q435",
    "Question": "Which of the following is used to open a file for writing?",
    "A": "r",
    "B": "w",
    "C": "a",
    "D": "x",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q436",
    "Question": "Which of the following statements are true?",
    "A": "When you open a file for reading, if the file does not exist, an error occurs",
    "B": " When you open a file for writing, if the file does not exist, a new file is created",
    "C": " When you open a file for writing, if the file exists, the existing file is overwritten with the new file",
    "D": "All of the mentioned",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "io_6"
  },
  {
    "Question ID": "Q437",
    "Question": "How do you delete a file?",
    "A": "del(fp)",
    "B": "fp.delete()",
    "C": "os.remove(‘file’)",
    "D": "os.delete(‘file’)",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q438",
    "Question": "In file handling, what does this terms means “r, a”?",
    "A": "read, append",
    "B": "append, read",
    "C": "write, append",
    "D": "None of the mentioned",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q439",
    "Question": "What is the use of “a” in file handling?",
    "A": "Read",
    "B": "Write",
    "C": "Append",
    "D": "None of the mentioned",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q440",
    "Question": "Which function is used to write all the characters?",
    "A": "write()",
    "B": "writecharacters()",
    "C": "writeall()",
    "D": "writechar()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q441",
    "Question": "Which function is used to close a file in python?",
    "A": "Close()",
    "B": "Stop()",
    "C": "End()",
    "D": "Closefile()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q442",
    "Question": "What is the correct syntax of open() function?",
    "A": "file = open(file_name [, access_mode][, buffering])",
    "B": "file object = open(file_name [, access_mode][, buffering])",
    "C": "file object = open(file_name)",
    "D": "None of the mentioned",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q443",
    "Question": "To open a file c:\\scores.txt for writing, we use ____________",
    "A": "outfile = open(“c:\\scores.txt”, “w”)",
    "B": "outfile = open(“c:\\\\scores.txt”, “w”)",
    "C": "outfile = open(file = “c:\\scores.txt”, “w”)",
    "D": "outfile = open(file = “c:\\\\scores.txt”, “w”)",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q444",
    "Question": "To open a file c:\\scores.txt for appending data, we use ____________",
    "A": "outfile = open(“c:\\\\scores.txt”, “a”)",
    "B": "outfile = open(“c:\\\\scores.txt”, “rw”)",
    "C": "outfile = open(file = “c:\\scores.txt”, “w”)",
    "D": "outfile = open(file = “c:\\\\scores.txt”, “w”)",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "io_6_3"
  },
  {
    "Question ID": "Q445",
    "Question": "Which module in the python standard library parses options received from the command line?",
    "A": "getarg",
    "B": "getopt",
    "C": "main",
    "D": "os",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8"
  },
  {
    "Question ID": "Q446",
    "Question": "To include the use of functions which are present in the random library, we must use the option:",
    "A": "import random",
    "B": "random.h",
    "C": "import.random",
    "D": "random.random",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8"
  },
  {
    "Question ID": "Q447",
    "Question": "What will be the output of the following Python code?  import random\nrandom.choice([10.4, 56.99, 76])",
    "A": "Error",
    "B": "Either 10.4, 56.99 or 76",
    "C": "Any number other than 10.4, 56.99 and 76",
    "D": "56.99 only",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q448",
    "Question": "What will be the output of the following Python code? import random\nrandom.choice(2,3,4)",
    "A": "An integer other than 2, 3 and 4",
    "B": "Either 2, 3 or 4",
    "C": "Error",
    "D": "3 only",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q449",
    "Question": "What will be the output of the following Python function: random.choice('sun')",
    "A": "sun",
    "B": "u",
    "C": "either s, u or n",
    "D": "error",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q450",
    "Question": " What will be the output of the following Python function if the random module has already been imported?\n\nrandom.randint(3.5,7)",
    "A": "Error",
    "B": "Any integer between 3.5 and 7, including 7",
    "C": "Any integer between 3.5 and 7, excluding 7",
    "D": "The integer closest to the mean of 3.5 and 7",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q451",
    "Question": "Which of the following functions helps us to randomize the items of a list?",
    "A": "seed",
    "B": "randomise",
    "C": "shuffle",
    "D": "uniform",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q452",
    "Question": "What is the interval of the value generated by the function random.random()?",
    "A": "(0,1)",
    "B": "(0,1]",
    "C": "[0,1]",
    "D": "[0,1)",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q453",
    "Question": "Both the functions randint and uniform accept ____________ parameters.",
    "A": "0",
    "B": "1",
    "C": "3",
    "D": "2",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q454",
    "Question": "What will be the output of the following Python function, assuming that the random library has already been included?\n\nrandom.shuffle[1,2,24]",
    "A": "Randomized list containing the same numbers in any order",
    "B": "The same list, that is [1,2,24]",
    "C": "A list containing any random numbers between 1 and 24",
    "D": "Error",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_1"
  },
  {
    "Question ID": "Q455",
    "Question": "Program code making use of a given module is called a ______ of the module.",
    "A": "Client",
    "B": "Docstring",
    "C": "Interface",
    "D": "Modularity",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_2"
  },
  {
    "Question ID": "Q456",
    "Question": "What is the purpose of the \"init.py\" file in a Python package?",
    "A": "It defines the variables and functions that are available to external code.",
    "B": "It specifies the dependencies required by the package.",
    "C": "It contains the code that is executed when the package is imported.",
    "D": "It provides documentation for the package and its contents.",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_3"
  },
  {
    "Question ID": "Q457",
    "Question": "Which of these is the definition for packages in Python?",
    "A": "A set of main modules",
    "B": "A folder of python modules",
    "C": "A number of files containing Python definitions and statements",
    "D": "A set of programs making use of Python modules",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_3"
  },
  {
    "Question ID": "Q458",
    "Question": "How can you install a package directly from a Git repository using pip?",
    "A": "pip install git-repo-url",
    "B": "pip install git-clone git-repo-url",
    "C": "pip install package-name@git-repo-url",
    "D": "pip install -e git-repo-url",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_4"
  },
  {
    "Question ID": "Q459",
    "Question": "What is the primary package manager used in Python for installing and managing packages?",
    "A": "pip",
    "B": "conda",
    "C": "npm",
    "D": "yarn",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_4"
  },
  {
    "Question ID": "Q460",
    "Question": "How can you install a specific version of a package using pip?",
    "A": "pip install package-name",
    "B": "pip install package-name@version",
    "C": "pip install package-name --version",
    "D": "pip install package-name -v",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "mod_8_4"
  },
  {
    "Question ID": "Q461",
    "Question": "What is setattr() used for?",
    "A": "To access the attribute of the object",
    "B": "To set an attribute",
    "C": "To check if an attribute exists or not",
    "D": "To delete an attribute",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_1"
  },
  {
    "Question ID": "Q462",
    "Question": "In Python, which keyword is used to create a new instance of a class?",
    "A": "new",
    "B": "this",
    "C": "self",
    "D": "init",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7"
  },
  {
    "Question ID": "Q463",
    "Question": "What is the process of creating a new object from a class called?",
    "A": "Instantiation",
    "B": "Inheritance",
    "C": "Encapsulation",
    "D": "Polymorphism",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7"
  },
  {
    "Question ID": "Q464",
    "Question": "In Python, what is the purpose of the self parameter in class methods?",
    "A": "It refers to the class itself and is used to access class variables and methods.",
    "B": "It represents the object being created from the class.",
    "C": "It is used to define the number of arguments required by the method.",
    "D": "It is a reserved parameter and does not serve any specific purpose.",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_1"
  },
  {
    "Question ID": "Q465",
    "Question": "Which of the following statements is true about the init() method in a Python class?",
    "A": "It is called when an object is deleted.",
    "B": "It is used to initialize the attributes of an object.",
    "C": "It is automatically called when a class is defined.",
    "D": "It is a reserved method that cannot be overridden.",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_1"
  },
  {
    "Question ID": "Q466",
    "Question": "In Python, how can you access the value of an instance attribute within a class method?",
    "A": "By using the self keyword.",
    "B": "By using the cls keyword.",
    "C": "By using the this keyword.",
    "D": "By using the attribute keyword.",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_2"
  },
  {
    "Question ID": "Q467",
    "Question": "Which of the following is NOT true about instance attributes in Python?",
    "A": "They are defined within the class constructor",
    "B": "They are unique to each instance of a class",
    "C": "They can be accessed and modified using dot notation",
    "D": "They are shared among all instances of a class",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_2"
  },
  {
    "Question ID": "Q468",
    "Question": "In Python, what are attributes?",
    "A": "Variables that store data within a class or object",
    "B": "Functions that perform actions on class instances",
    "C": "Special methods that are automatically invoked",
    "D": "Keywords used to define class hierarchy",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_2"
  },
  {
    "Question ID": "Q469",
    "Question": "What is the purpose of inheritance in object-oriented programming?",
    "A": "To allow objects to communicate with each other.",
    "B": "To break down complex programs into smaller, manageable parts.",
    "C": "To restrict access to data and methods within a class.",
    "D": "To enable classes to inherit properties and behaviors from other classes.",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_3"
  },
  {
    "Question ID": "Q470",
    "Question": "Which of the following best describes inheritance?",
    "A": "Ability of a class to derive members of another class as a part of its own definition",
    "B": "Means of bundling instance variables and methods in order to restrict access to certain class members",
    "C": "Focuses on variables and passing of variables to functions",
    "D": "Allows for implementation of elegant software that is well designed and easily modified",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_3"
  },
  {
    "Question ID": "Q471",
    "Question": "What does single-level inheritance mean?",
    "A": "A subclass derives from a class which in turn derives from another class",
    "B": "A single superclass inherits from multiple subclasses",
    "C": "A single subclass derives from a single superclass",
    "D": "Multiple base classes inherit a single derived class",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_3"
  },
  {
    "Question ID": "Q472",
    "Question": "What is the biggest reason for the use of polymorphism?",
    "A": "It allows the programmer to think at a more abstract level",
    "B": "There is less program code to write",
    "C": "The program will have a more elegant design and will be easier to maintain and update",
    "D": "Program code takes up less space",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q473",
    "Question": "Which keyword is used in Python to indicate method overriding in a subclass?",
    "A": "override",
    "B": "super",
    "C": "pass",
    "D": "None of the above",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q474",
    "Question": "Which of the following is NOT an example of polymorphism in Python?",
    "A": "Function overloading",
    "B": "Method overriding",
    "C": "Operator overloading",
    "D": "Variable overloading",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q475",
    "Question": "Which keyword is used to define a method in Python that can be overridden in a subclass?",
    "A": "override",
    "B": "redefine",
    "C": "super",
    "D": "None of the above",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q476",
    "Question": "Which of the following is NOT an advantage of polymorphism in Python?",
    "A": "Code reusability",
    "B": "Improved code organization and maintainability",
    "C": "Flexibility and extensibility",
    "D": "Improved performance and efficiency",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q477",
    "Question": "Which of the following is an example of polymorphism in Python?",
    "A": "Calling a method in the parent class from the child class.",
    "B": "Defining a method with the same name but different parameters in the subclass.",
    "C": "Defining multiple methods with the same name but different parameters in the same class.",
    "D": "All of the above.",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q478",
    "Question": "What is method overriding in Python?",
    "A": "It is the process of defining a method with the same name in the subclass that is already defined in the parent class.",
    "B": "It is the process of hiding the implementation details of a method.",
    "C": "It is the process of creating multiple methods with the same name but different parameters.",
    "D": "It is the process of calling a method in the parent class from the child class.",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q479",
    "Question": "Which special method is used to implement polymorphism in Python?",
    "A": "init()",
    "B": "str()",
    "C": "add()",
    "D": " len()",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q480",
    "Question": "What is the benefit of using polymorphism in Python?",
    "A": "It allows for code reusability.",
    "B": "It allows for easier maintenance and updates.",
    "C": "It enhances the flexibility of code.",
    "D": "All of the above.",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q481",
    "Question": "What is method overloading in Python?",
    "A": "It is the process of defining a method with the same name but different parameters in the same class.",
    "B": "It is the process of defining multiple methods with the same name but different parameters in the same class.",
    "C": "It is the process of defining a method that can be overridden in a subclass.",
    "D": "It is the process of calling a method in the parent class from the child class.",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_4"
  },
  {
    "Question ID": "Q482",
    "Question": "Which of the following is an example of encapsulation in Python?",
    "A": "Using a private attribute to store the state of an object",
    "B": "Creating a public method that allows external code to modify the state of an object.",
    "C": "Using a global variable to store data that is shared across multiple functions.",
    "D": "Using a built-in Python function to perform a specific task.",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q483",
    "Question": "What is the purpose of name mangling in Python?",
    "A": "To hide attribute names from outside the class",
    "B": "To prevent attribute modification within the class",
    "C": "To avoid naming conflicts between class attributes",
    "D": "To improve code performance and efficiency",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q484",
    "Question": "How can encapsulation help in code maintenance?",
    "A": "It allows for better code organization and modularization",
    "B": "It simplifies the debugging process",
    "C": "It improves code performance and efficiency",
    "D": "It ensures data security and prevents unauthorized access",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q485",
    "Question": "What is encapsulation in Python?",
    "A": "A technique for bundling data and methods together in a class",
    "B": "A mechanism for restricting access to class members",
    "C": "A process of hiding implementation details of a class",
    "D": "All of the above",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q486",
    "Question": "How can encapsulation be achieved in Python?",
    "A": "By using the private access specifier before attribute or method names",
    "B": "By using the public access specifier before attribute or method names",
    "C": "By using the protected access specifier before attribute or method names",
    "D": "By using the encapsulate keyword before attribute or method names",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q487",
    "Question": "What is the main goal of encapsulation in object-oriented programming?",
    "A": "Data abstraction",
    "B": "Data hiding",
    "C": "Data encapsulation",
    "D": "Data polymorphism",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q488",
    "Question": "Which access specifier in Python allows unrestricted access to class members?",
    "A": "public",
    "B": "private",
    "C": "protected",
    "D": "global",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q489",
    "Question": "How can encapsulation help in maintaining code integrity?",
    "A": "By preventing accidental modification of critical data",
    "B": "By allowing easy access to all class members",
    "C": "By facilitating dynamic changes to class behavior",
    "D": "By enabling seamless integration of external libraries",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q490",
    "Question": "What is the role of access specifiers in encapsulation?",
    "A": "They control the visibility and accessibility of class members",
    "B": "They define the scope of class attributes and methods",
    "C": "They enforce data type restrictions on class members",
    "D": "They determine the order of execution of class methods",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q491",
    "Question": "Which access specifier in Python is used to indicate a protected attribute or method?",
    "A": "public",
    "B": "private",
    "C": "protected",
    "D": "global",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "oop_7_5"
  },
  {
    "Question ID": "Q492",
    "Question": "Which Python module is used for regular expressions?",
    "A": "re",
    "B": "regex",
    "C": "regexpy",
    "D": "regexp",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9"
  },
  {
    "Question ID": "Q493",
    "Question": "What does the re.match() function in Python do?",
    "A": "Matches a pattern anywhere in a string",
    "B": "Matches a pattern at the beginning of a string",
    "C": "Matches a pattern at the end of a string",
    "D": "Matches a pattern case-insensitively",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_1"
  },
  {
    "Question ID": "Q494",
    "Question": "Which regular expression character matches any single character?",
    "A": "\"*\"",
    "B": "\"+\"",
    "C": "\".\"",
    "D": "\"?\"",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_1"
  },
  {
    "Question ID": "Q495",
    "Question": "What is the purpose of the re.search() function in Python?",
    "A": "Searches for a pattern at the beginning of a string",
    "B": "Searches for a pattern at the end of a string",
    "C": "Searches for a pattern anywhere in a string",
    "D": "Searches for a pattern case-insensitively",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_1"
  },
  {
    "Question ID": "Q496",
    "Question": "What does the metacharacter \"$\" represent in regular expressions?",
    "A": "Matches any single character except a newline",
    "B": "Matches the start of a line",
    "C": "Matches zero or more occurrences of the preceding character",
    "D": "Matches the end of a line",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_2"
  },
  {
    "Question ID": "Q497",
    "Question": "Which of the following options describes the functionality of the metacharacter \"|\" in regular expressions?",
    "A": "It matches the start of a line.",
    "B": "It matches the end of a line.",
    "C": "It matches either the expression before or after the \"|\" symbol.",
    "D": "It matches zero or more occurrences of the preceding character.",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_2"
  },
  {
    "Question ID": "Q498",
    "Question": "Which metacharacter is used to match one or more occurrences of the preceding character?",
    "A": "\"*\"",
    "B": "\"+\"",
    "C": "\"?\"",
    "D": "\"[]\"",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_2"
  },
  {
    "Question ID": "Q499",
    "Question": "What does the character class [0-9] represent in regular expressions?",
    "A": "Matches any lowercase letter.",
    "B": "Matches any uppercase letter.",
    "C": "Matches any digit from 0 to 9.",
    "D": "Matches any special character.",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9"
  },
  {
    "Question ID": "Q500",
    "Question": "Which regular expression character matches zero or more occurrences of the preceding pattern?",
    "A": "\"*\"",
    "B": "\"+\"",
    "C": "\".\"",
    "D": "\"?\"",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q501",
    "Question": "What is the purpose of the re.findall() function in Python?",
    "A": "Finds and returns all matches of a pattern in a string",
    "B": "Replaces all occurrences of a pattern in a string",
    "C": "Splits a string into a list based on a pattern",
    "D": "Checks if a string matches a pattern",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q502",
    "Question": "What is the purpose of the re.fullmatch() function in Python?",
    "A": "Matches a pattern at the beginning of a string",
    "B": "Matches a pattern at the end of a string",
    "C": "Matches a pattern anywhere in a string",
    "D": "Matches a pattern against the entire string",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q503",
    "Question": "Which method is used to retrieve the matched portion of a string using the re.search() method in Python?",
    "A": "group()",
    "B": "search()",
    "C": "match()",
    "D": "matched()",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q504",
    "Question": "Which method can be used to retrieve the starting and ending indices of a match in a string using regular expressions in Python?",
    "A": "start()",
    "B": "end()",
    "C": "span()",
    "D": "indices()",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q505",
    "Question": "Which of the following characters can be used to specify a range of characters in a regular expression pattern?",
    "A": "\"*\"",
    "B": "\"-\"",
    "C": "\".\"",
    "D": "\"+\"",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q506",
    "Question": "What is the purpose of the group() method in Python regular expressions?",
    "A": "Returns the entire matched string",
    "B": "Returns the index of the first matched character",
    "C": "Returns the matched pattern",
    "D": "Returns the total count of matches",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q507",
    "Question": "Which method is used to access the matched portions of a string after finding matches using regular expressions in Python?",
    "A": "group()",
    "B": "match()",
    "C": "match.group()",
    "D": "find()",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q508",
    "Question": "What does the re.finditer() function in Python return?",
    "A": "The first match of a pattern in a string",
    "B": "All matches of a pattern in a string as an iterable object",
    "C": "The total count of matches of a pattern in a string",
    "D": "The last match of a pattern in a string",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q509",
    "Question": "Which of the following is the correct syntax to find all matches of a pattern using re.findall() in Python?",
    "A": "re.findall(pattern, string)",
    "B": "re.findall(string, pattern)",
    "C": "re.findall(pattern)",
    "D": "findall(pattern, string)",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q510",
    "Question": "Which method is used in Python to find all matches of a pattern in a string?",
    "A": "re.match()",
    "B": "re.search()",
    "C": "re.findall()",
    "D": "re.finditer()",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_3"
  },
  {
    "Question ID": "Q511",
    "Question": "What is the purpose of the sub method in the re library?",
    "A": "It searches for a pattern in a string.",
    "B": "It replaces all occurrences of a pattern in a string with a replacement string",
    "C": "It splits a string into a list of substrings.",
    "D": "It returns the first occurrence of a pattern in a string.",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q512",
    "Question": "What is the purpose of the re.escape() function in Python regular expressions?",
    "A": "Escapes special characters in a string to be treated literally in a pattern",
    "B": "Searches for a pattern at the beginning of a string",
    "C": "Replaces all occurrences of a pattern in a string",
    "D": "Returns the modified string after replacements",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q513",
    "Question": "Which parameter in the re.sub() function is used to enable or disable case-insensitive replacements in Python?",
    "A": "pattern",
    "B": "replacement",
    "C": "flags",
    "D": "count",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q514",
    "Question": "What is the purpose of the re.subn() function in Python regular expressions?",
    "A": "Replaces all occurrences of a pattern in a string",
    "B": "Searches for a pattern and returns the total count of matches",
    "C": "Performs a callback-based replacement",
    "D": "Returns the modified string after replacements along with the count of replacements made",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q515",
    "Question": "Which method is used to perform a callback-based replacement using regular expressions in Python?",
    "A": "re.replace()",
    "B": "re.subn()",
    "C": "re.modify()",
    "D": "re.sub()",
    "Correct Answer": "D",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q516",
    "Question": "Which of the following is the correct syntax to perform a case-insensitive replacement using re.sub() in Python?",
    "A": "re.sub(pattern, replacement, string, re.IGNORECASE)",
    "B": "re.sub(replacement, pattern, string, re.IGNORECASE)",
    "C": "re.sub(string, pattern, replacement, re.IGNORECASE)",
    "D": "sub(pattern, replacement, string, re.IGNORECASE)",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q517",
    "Question": "What is the purpose of the backreference \\1 in a replacement string when using regular expressions in Python?",
    "A": "It matches any single character",
    "B": "It matches one or more occurrences of the preceding pattern",
    "C": "It replaces occurrences of a captured group in the pattern",
    "D": "It ignores the case sensitivity of the pattern",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q518",
    "Question": "Which parameter in the re.sub() function is used to limit the number of replacements made in a string?",
    "A": "pattern",
    "B": "replacement",
    "C": "count",
    "D": "flags",
    "Correct Answer": "C",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q519",
    "Question": "What does the re.subn() function in Python return?",
    "A": "The modified string after replacing occurrences of a pattern",
    "B": "The count of replacements made in the string",
    "C": "The original string without any replacements",
    "D": "The length of the string before and after replacements",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q520",
    "Question": "What is the syntax to replace occurrences of a pattern using the re.sub() function in Python?",
    "A": "re.sub(pattern, replacement, string)",
    "B": "re.sub(replacement, pattern, string)",
    "C": "re.sub(string, pattern, replacement)",
    "D": "sub(pattern, replacement, string)",
    "Correct Answer": "A",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  },
  {
    "Question ID": "Q521",
    "Question": "Which method is used in Python to replace occurrences of a pattern in a string?",
    "A": "re.replace()",
    "B": "re.sub()",
    "C": "re.modify()",
    "D": "re.change()",
    "Correct Answer": "B",
    "Difficulty Level": "Intermediate",
    "tag": "regex_9_4"
  }
]